{"ast":null,"code":"import{useEffect,useRef}from\"react\";import{useMotionValue,useSpring}from\"framer-motion\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function CountUp(_ref){let{to,from=0,direction=\"up\",delay=0,duration=2,className=\"\",startWhen=true,separator=\"\",onStart,onEnd}=_ref;const ref=useRef(null);const motionValue=useMotionValue(direction===\"down\"?to:from);const damping=20+40*(1/duration);const stiffness=100*(1/duration);const springValue=useSpring(motionValue,{damping,stiffness});const getDecimalPlaces=num=>{const str=num.toString();if(str.includes(\".\")){const decimals=str.split(\".\")[1];if(parseInt(decimals)!==0){return decimals.length;}}return 0;};const maxDecimals=Math.max(getDecimalPlaces(from),getDecimalPlaces(to));useEffect(()=>{if(ref.current){ref.current.textContent=String(direction===\"down\"?to:from);}},[from,to,direction]);useEffect(()=>{if(startWhen){if(typeof onStart===\"function\")onStart();const timeoutId=setTimeout(()=>{motionValue.set(direction===\"down\"?from:to);},delay*1000);const durationTimeoutId=setTimeout(()=>{if(typeof onEnd===\"function\")onEnd();},delay*1000+duration*1000);return()=>{clearTimeout(timeoutId);clearTimeout(durationTimeoutId);};}},[startWhen,motionValue,direction,from,to,delay,onStart,onEnd,duration]);useEffect(()=>{const unsubscribe=springValue.on(\"change\",latest=>{if(ref.current){const hasDecimals=maxDecimals>0;const options={useGrouping:!!separator,minimumFractionDigits:hasDecimals?maxDecimals:0,maximumFractionDigits:hasDecimals?maxDecimals:0};const formattedNumber=Intl.NumberFormat(\"en-US\",options).format(latest);ref.current.textContent=separator?formattedNumber.replace(/,/g,separator):formattedNumber;}});return()=>unsubscribe();},[springValue,separator,maxDecimals]);return/*#__PURE__*/_jsx(\"span\",{className:className,ref:ref});}","map":{"version":3,"names":["useEffect","useRef","useMotionValue","useSpring","jsx","_jsx","CountUp","_ref","to","from","direction","delay","duration","className","startWhen","separator","onStart","onEnd","ref","motionValue","damping","stiffness","springValue","getDecimalPlaces","num","str","toString","includes","decimals","split","parseInt","length","maxDecimals","Math","max","current","textContent","String","timeoutId","setTimeout","set","durationTimeoutId","clearTimeout","unsubscribe","on","latest","hasDecimals","options","useGrouping","minimumFractionDigits","maximumFractionDigits","formattedNumber","Intl","NumberFormat","format","replace"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/src/components/TextAnimations/CountUp/CountUp.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { useMotionValue, useSpring } from \"framer-motion\";\r\n\r\nexport default function CountUp({\r\n  to,\r\n  from = 0,\r\n  direction = \"up\",\r\n  delay = 0,\r\n  duration = 2,\r\n  className = \"\",\r\n  startWhen = true,\r\n  separator = \"\",\r\n  onStart,\r\n  onEnd,\r\n}) {\r\n  const ref = useRef(null);\r\n  const motionValue = useMotionValue(direction === \"down\" ? to : from);\r\n\r\n  const damping = 20 + 40 * (1 / duration);\r\n  const stiffness = 100 * (1 / duration);\r\n\r\n  const springValue = useSpring(motionValue, {\r\n    damping,\r\n    stiffness,\r\n  });\r\n\r\n  const getDecimalPlaces = (num) => {\r\n    const str = num.toString();\r\n\r\n    if (str.includes(\".\")) {\r\n      const decimals = str.split(\".\")[1];\r\n\r\n      if (parseInt(decimals) !== 0) {\r\n        return decimals.length;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  const maxDecimals = Math.max(getDecimalPlaces(from), getDecimalPlaces(to));\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      ref.current.textContent = String(direction === \"down\" ? to : from);\r\n    }\r\n  }, [from, to, direction]);\r\n\r\n  useEffect(() => {\r\n    if (startWhen) {\r\n      if (typeof onStart === \"function\") onStart();\r\n\r\n      const timeoutId = setTimeout(() => {\r\n        motionValue.set(direction === \"down\" ? from : to);\r\n      }, delay * 1000);\r\n\r\n      const durationTimeoutId = setTimeout(() => {\r\n    \r\n        if (typeof onEnd === \"function\") onEnd();\r\n      }, delay * 1000 + duration * 1000);\r\n\r\n      return () => {\r\n        clearTimeout(timeoutId);\r\n        clearTimeout(durationTimeoutId);\r\n      };\r\n    }\r\n  }, [\r\n    startWhen,\r\n    motionValue,\r\n    direction,\r\n    from,\r\n    to,\r\n    delay,\r\n    onStart,\r\n    onEnd,\r\n    duration,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = springValue.on(\"change\", (latest) => {\r\n      if (ref.current) {\r\n        const hasDecimals = maxDecimals > 0;\r\n\r\n        const options = {\r\n          useGrouping: !!separator,\r\n          minimumFractionDigits: hasDecimals ? maxDecimals : 0,\r\n          maximumFractionDigits: hasDecimals ? maxDecimals : 0,\r\n        };\r\n\r\n        const formattedNumber = Intl.NumberFormat(\"en-US\", options).format(\r\n          latest\r\n        );\r\n\r\n        ref.current.textContent = separator\r\n          ? formattedNumber.replace(/,/g, separator)\r\n          : formattedNumber;\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [springValue, separator, maxDecimals]);\r\n\r\n  return <span className={className} ref={ref} />;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}