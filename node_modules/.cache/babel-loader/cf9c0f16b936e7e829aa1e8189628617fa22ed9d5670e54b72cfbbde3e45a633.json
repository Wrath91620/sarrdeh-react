{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karee\\\\sarrdeh-tech-react-bootstrap\\\\src\\\\components\\\\TextAnimations\\\\CountUp\\\\CountUp.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { useMotionValue, useSpring } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CountUp({\n  to,\n  from = 0,\n  direction = \"up\",\n  delay = 0,\n  duration = 2,\n  className = \"\",\n  startWhen = true,\n  separator = \"\",\n  onStart,\n  onEnd\n}) {\n  _s();\n  const ref = useRef(null);\n  const motionValue = useMotionValue(direction === \"down\" ? to : from);\n  const damping = 20 + 40 * (1 / duration);\n  const stiffness = 100 * (1 / duration);\n  const springValue = useSpring(motionValue, {\n    damping,\n    stiffness\n  });\n  const getDecimalPlaces = num => {\n    const str = num.toString();\n    if (str.includes(\".\")) {\n      const decimals = str.split(\".\")[1];\n      if (parseInt(decimals) !== 0) {\n        return decimals.length;\n      }\n    }\n    return 0;\n  };\n  const maxDecimals = Math.max(getDecimalPlaces(from), getDecimalPlaces(to));\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.textContent = String(direction === \"down\" ? to : from);\n    }\n  }, [from, to, direction]);\n  useEffect(() => {\n    if (startWhen) {\n      if (typeof onStart === \"function\") onStart();\n      const timeoutId = setTimeout(() => {\n        motionValue.set(direction === \"down\" ? from : to);\n      }, delay * 1000);\n      const durationTimeoutId = setTimeout(() => {\n        if (typeof onEnd === \"function\") onEnd();\n      }, delay * 1000 + duration * 1000);\n      return () => {\n        clearTimeout(timeoutId);\n        clearTimeout(durationTimeoutId);\n      };\n    }\n  }, [startWhen, motionValue, direction, from, to, delay, onStart, onEnd, duration]);\n  useEffect(() => {\n    const unsubscribe = springValue.on(\"change\", latest => {\n      if (ref.current) {\n        const hasDecimals = maxDecimals > 0;\n        const options = {\n          useGrouping: !!separator,\n          minimumFractionDigits: hasDecimals ? maxDecimals : 0,\n          maximumFractionDigits: hasDecimals ? maxDecimals : 0\n        };\n        const formattedNumber = Intl.NumberFormat(\"en-US\", options).format(latest);\n        ref.current.textContent = separator ? formattedNumber.replace(/,/g, separator) : formattedNumber;\n      }\n    });\n    return () => unsubscribe();\n  }, [springValue, separator, maxDecimals]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    ref: ref\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n}\n_s(CountUp, \"y76YsTqMMCT24O8q0Tz/6BbLqbs=\", false, function () {\n  return [useMotionValue, useSpring];\n});\n_c = CountUp;\nvar _c;\n$RefreshReg$(_c, \"CountUp\");","map":{"version":3,"names":["useEffect","useRef","useMotionValue","useSpring","jsxDEV","_jsxDEV","CountUp","to","from","direction","delay","duration","className","startWhen","separator","onStart","onEnd","_s","ref","motionValue","damping","stiffness","springValue","getDecimalPlaces","num","str","toString","includes","decimals","split","parseInt","length","maxDecimals","Math","max","current","textContent","String","timeoutId","setTimeout","set","durationTimeoutId","clearTimeout","unsubscribe","on","latest","hasDecimals","options","useGrouping","minimumFractionDigits","maximumFractionDigits","formattedNumber","Intl","NumberFormat","format","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Karee/sarrdeh-tech-react-bootstrap/src/components/TextAnimations/CountUp/CountUp.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { useMotionValue, useSpring } from \"framer-motion\";\n\nexport default function CountUp({\n  to,\n  from = 0,\n  direction = \"up\",\n  delay = 0,\n  duration = 2,\n  className = \"\",\n  startWhen = true,\n  separator = \"\",\n  onStart,\n  onEnd,\n}) {\n  const ref = useRef(null);\n  const motionValue = useMotionValue(direction === \"down\" ? to : from);\n\n  const damping = 20 + 40 * (1 / duration);\n  const stiffness = 100 * (1 / duration);\n\n  const springValue = useSpring(motionValue, {\n    damping,\n    stiffness,\n  });\n\n  const getDecimalPlaces = (num) => {\n    const str = num.toString();\n\n    if (str.includes(\".\")) {\n      const decimals = str.split(\".\")[1];\n\n      if (parseInt(decimals) !== 0) {\n        return decimals.length;\n      }\n    }\n\n    return 0;\n  };\n\n  const maxDecimals = Math.max(getDecimalPlaces(from), getDecimalPlaces(to));\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.textContent = String(direction === \"down\" ? to : from);\n    }\n  }, [from, to, direction]);\n\n  useEffect(() => {\n    if (startWhen) {\n      if (typeof onStart === \"function\") onStart();\n\n      const timeoutId = setTimeout(() => {\n        motionValue.set(direction === \"down\" ? from : to);\n      }, delay * 1000);\n\n      const durationTimeoutId = setTimeout(() => {\n        if (typeof onEnd === \"function\") onEnd();\n      }, delay * 1000 + duration * 1000);\n\n      return () => {\n        clearTimeout(timeoutId);\n        clearTimeout(durationTimeoutId);\n      };\n    }\n  }, [\n    startWhen,\n    motionValue,\n    direction,\n    from,\n    to,\n    delay,\n    onStart,\n    onEnd,\n    duration,\n  ]);\n\n  useEffect(() => {\n    const unsubscribe = springValue.on(\"change\", (latest) => {\n      if (ref.current) {\n        const hasDecimals = maxDecimals > 0;\n\n        const options = {\n          useGrouping: !!separator,\n          minimumFractionDigits: hasDecimals ? maxDecimals : 0,\n          maximumFractionDigits: hasDecimals ? maxDecimals : 0,\n        };\n\n        const formattedNumber = Intl.NumberFormat(\"en-US\", options).format(\n          latest\n        );\n\n        ref.current.textContent = separator\n          ? formattedNumber.replace(/,/g, separator)\n          : formattedNumber;\n      }\n    });\n\n    return () => unsubscribe();\n  }, [springValue, separator, maxDecimals]);\n\n  return <span className={className} ref={ref} />;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}