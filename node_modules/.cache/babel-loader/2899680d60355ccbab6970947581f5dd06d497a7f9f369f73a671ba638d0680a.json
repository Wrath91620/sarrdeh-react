{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarrdeh Tech\\\\Desktop\\\\Sarrdeh-React\\\\sarrdeh-react\\\\src\\\\components\\\\LightRays.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from \"react\";\nimport * as OGL from \"ogl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_COLOR = \"#57B2B6\";\nconst hexToRgb = hex => {\n  const m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return m ? [parseInt(m[1], 16) / 255, parseInt(m[2], 16) / 255, parseInt(m[3], 16) / 255] : [1, 1, 1];\n};\nconst getAnchorAndDir = (origin, w, h) => {\n  const outside = 0.2;\n  switch (origin) {\n    case \"top-left\":\n      return {\n        anchor: [0, -outside * h],\n        dir: [0, 1]\n      };\n    case \"top-right\":\n      return {\n        anchor: [w, -outside * h],\n        dir: [0, 1]\n      };\n    case \"left\":\n      return {\n        anchor: [-outside * w, 0.5 * h],\n        dir: [1, 0]\n      };\n    case \"right\":\n      return {\n        anchor: [(1 + outside) * w, 0.5 * h],\n        dir: [-1, 0]\n      };\n    case \"bottom-left\":\n      return {\n        anchor: [0, (1 + outside) * h],\n        dir: [0, -1]\n      };\n    case \"bottom-center\":\n      return {\n        anchor: [0.5 * w, (1 + outside) * h],\n        dir: [0, -1]\n      };\n    case \"bottom-right\":\n      return {\n        anchor: [w, (1 + outside) * h],\n        dir: [0, -1]\n      };\n    default:\n      // \"top-center\"\n      return {\n        anchor: [0.5 * w, -outside * h],\n        dir: [0, 1]\n      };\n  }\n};\nconst LightRays = ({\n  raysOrigin = \"top-center\",\n  raysColor = DEFAULT_COLOR,\n  raysSpeed = 1,\n  lightSpread = 1,\n  rayLength = 2,\n  pulsating = false,\n  fadeDistance = 1.0,\n  saturation = 1.0,\n  followMouse = true,\n  mouseInfluence = 0.1,\n  noiseAmount = 0.0,\n  distortion = 0.1,\n  className = \"\"\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const uniformsRef = useRef(null);\n  const rendererRef = useRef(null);\n  const mouseRef = useRef({\n    x: 0.5,\n    y: 0.5\n  });\n  const smoothMouseRef = useRef({\n    x: 0.5,\n    y: 0.5\n  });\n  const animationIdRef = useRef(null);\n  const meshRef = useRef(null);\n  const cleanupFunctionRef = useRef(null);\n  const [isVisible, setIsVisible] = useState(false);\n  const observerRef = useRef(null);\n  useEffect(() => {\n    if (!containerRef.current) return;\n    observerRef.current = new IntersectionObserver(entries => {\n      const entry = entries[0];\n      setIsVisible(entry.isIntersecting);\n    }, {\n      threshold: 0.1\n    });\n    observerRef.current.observe(containerRef.current);\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n        observerRef.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!isVisible || !containerRef.current) return;\n    if (cleanupFunctionRef.current) {\n      cleanupFunctionRef.current();\n      cleanupFunctionRef.current = null;\n    }\n    const initializeWebGL = async () => {\n      if (!containerRef.current) return;\n      await new Promise(resolve => setTimeout(resolve, 10));\n      if (!containerRef.current) return;\n      const renderer = new OGL.Renderer({\n        dpr: Math.min(window.devicePixelRatio, 2),\n        alpha: true\n      });\n      rendererRef.current = renderer;\n      const gl = renderer.gl;\n      gl.canvas.style.width = \"100%\";\n      gl.canvas.style.height = \"100%\";\n      while (containerRef.current.firstChild) {\n        containerRef.current.removeChild(containerRef.current.firstChild);\n      }\n      containerRef.current.appendChild(gl.canvas);\n      const vert = `\nattribute vec2 position;\nvarying vec2 vUv;\nvoid main() {\n  vUv = position * 0.5 + 0.5;\n  gl_Position = vec4(position, 0.0, 1.0);\n}`;\n      const frag = `precision highp float;\n\nuniform float iTime;\nuniform vec2  iResolution;\n\nuniform vec2  rayPos;\nuniform vec2  rayDir;\nuniform vec3  raysColor;\nuniform float raysSpeed;\nuniform float lightSpread;\nuniform float rayLength;\nuniform float pulsating;\nuniform float fadeDistance;\nuniform float saturation;\nuniform vec2  mousePos;\nuniform float mouseInfluence;\nuniform float noiseAmount;\nuniform float distortion;\n\nvarying vec2 vUv;\n\nfloat noise(vec2 st) {\n  return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\n}\n\nfloat rayStrength(vec2 raySource, vec2 rayRefDirection, vec2 coord,\n                  float seedA, float seedB, float speed) {\n  vec2 sourceToCoord = coord - raySource;\n  vec2 dirNorm = normalize(sourceToCoord);\n  float cosAngle = dot(dirNorm, rayRefDirection);\n\n  float distortedAngle = cosAngle + distortion * sin(iTime * 2.0 + length(sourceToCoord) * 0.01) * 0.2;\n  \n  float spreadFactor = pow(max(distortedAngle, 0.0), 1.0 / max(lightSpread, 0.001));\n\n  float distance = length(sourceToCoord);\n  float maxDistance = iResolution.x * rayLength;\n  float lengthFalloff = clamp((maxDistance - distance) / maxDistance, 0.0, 1.0);\n  \n  float fadeFalloff = clamp((iResolution.x * fadeDistance - distance) / (iResolution.x * fadeDistance), 0.5, 1.0);\n  float pulse = pulsating > 0.5 ? (0.8 + 0.2 * sin(iTime * speed * 3.0)) : 1.0;\n\n  float baseStrength = clamp(\n    (0.45 + 0.15 * sin(distortedAngle * seedA + iTime * speed)) +\n    (0.3 + 0.2 * cos(-distortedAngle * seedB + iTime * speed)),\n    0.0, 1.0\n  );\n\n  return baseStrength * lengthFalloff * fadeFalloff * spreadFactor * pulse;\n}\n\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\n  vec2 coord = vec2(fragCoord.x, iResolution.y - fragCoord.y);\n  \n  vec2 finalRayDir = rayDir;\n  if (mouseInfluence > 0.0) {\n    vec2 mouseScreenPos = mousePos * iResolution.xy;\n    vec2 mouseDirection = normalize(mouseScreenPos - rayPos);\n    finalRayDir = normalize(mix(rayDir, mouseDirection, mouseInfluence));\n  }\n\n  vec4 rays1 = vec4(1.0) *\n               rayStrength(rayPos, finalRayDir, coord, 36.2214, 21.11349,\n                           1.5 * raysSpeed);\n  vec4 rays2 = vec4(1.0) *\n               rayStrength(rayPos, finalRayDir, coord, 22.3991, 18.0234,\n                           1.1 * raysSpeed);\n\n  fragColor = rays1 * 0.5 + rays2 * 0.4;\n\n  if (noiseAmount > 0.0) {\n    float n = noise(coord * 0.01 + iTime * 0.1);\n    fragColor.rgb *= (1.0 - noiseAmount + noiseAmount * n);\n  }\n\n  float brightness = 1.0 - (coord.y / iResolution.y);\n  fragColor.x *= 0.1 + brightness * 0.8;\n  fragColor.y *= 0.3 + brightness * 0.6;\n  fragColor.z *= 0.5 + brightness * 0.5;\n\n  if (saturation != 1.0) {\n    float gray = dot(fragColor.rgb, vec3(0.299, 0.587, 0.114));\n    fragColor.rgb = mix(vec3(gray), fragColor.rgb, saturation);\n  }\n\n  fragColor.rgb *= raysColor;\n}\n\nvoid main() {\n  vec4 color;\n  mainImage(color, gl_FragCoord.xy);\n  gl_FragColor  = color;\n}`;\n      const uniforms = {\n        iTime: {\n          value: 0\n        },\n        iResolution: {\n          value: [1, 1]\n        },\n        rayPos: {\n          value: [0, 0]\n        },\n        rayDir: {\n          value: [0, 1]\n        },\n        raysColor: {\n          value: hexToRgb(raysColor)\n        },\n        raysSpeed: {\n          value: raysSpeed\n        },\n        lightSpread: {\n          value: lightSpread\n        },\n        rayLength: {\n          value: rayLength\n        },\n        pulsating: {\n          value: pulsating ? 1.0 : 0.0\n        },\n        fadeDistance: {\n          value: fadeDistance\n        },\n        saturation: {\n          value: saturation\n        },\n        mousePos: {\n          value: [0.5, 0.5]\n        },\n        mouseInfluence: {\n          value: mouseInfluence\n        },\n        noiseAmount: {\n          value: noiseAmount\n        },\n        distortion: {\n          value: distortion\n        }\n      };\n      uniformsRef.current = uniforms;\n      const geometry = new OGL.Triangle(gl);\n      const program = new OGL.Program(gl, {\n        vertex: vert,\n        fragment: frag,\n        uniforms\n      });\n      const mesh = new OGL.Mesh(gl, {\n        geometry,\n        program\n      });\n      meshRef.current = mesh;\n      const updatePlacement = () => {\n        if (!containerRef.current || !renderer) return;\n        renderer.dpr = Math.min(window.devicePixelRatio, 2);\n        const {\n          clientWidth: wCSS,\n          clientHeight: hCSS\n        } = containerRef.current;\n        renderer.setSize(wCSS, hCSS);\n        const dpr = renderer.dpr;\n        const w = wCSS * dpr;\n        const h = hCSS * dpr;\n        uniforms.iResolution.value = [w, h];\n        const {\n          anchor,\n          dir\n        } = getAnchorAndDir(raysOrigin, w, h);\n        uniforms.rayPos.value = anchor;\n        uniforms.rayDir.value = dir;\n      };\n      const loop = t => {\n        if (!rendererRef.current || !uniformsRef.current || !meshRef.current) {\n          return;\n        }\n        uniforms.iTime.value = t * 0.001;\n        if (followMouse && mouseInfluence > 0.0) {\n          const smoothing = 0.92;\n          smoothMouseRef.current.x = smoothMouseRef.current.x * smoothing + mouseRef.current.x * (1 - smoothing);\n          smoothMouseRef.current.y = smoothMouseRef.current.y * smoothing + mouseRef.current.y * (1 - smoothing);\n          uniforms.mousePos.value = [smoothMouseRef.current.x, smoothMouseRef.current.y];\n        }\n        try {\n          renderer.render({\n            scene: mesh\n          });\n          animationIdRef.current = requestAnimationFrame(loop);\n        } catch (error) {\n          console.warn(\"WebGL rendering error:\", error);\n          return;\n        }\n      };\n      window.addEventListener(\"resize\", updatePlacement);\n      updatePlacement();\n      animationIdRef.current = requestAnimationFrame(loop);\n      cleanupFunctionRef.current = () => {\n        if (animationIdRef.current) {\n          cancelAnimationFrame(animationIdRef.current);\n          animationIdRef.current = null;\n        }\n        window.removeEventListener(\"resize\", updatePlacement);\n        if (renderer) {\n          try {\n            const canvas = renderer.gl.canvas;\n            const loseContextExt = renderer.gl.getExtension(\"WEBGL_lose_context\");\n            if (loseContextExt) {\n              loseContextExt.loseContext();\n            }\n            if (canvas && canvas.parentNode) {\n              canvas.parentNode.removeChild(canvas);\n            }\n          } catch (error) {\n            console.warn(\"Error during WebGL cleanup:\", error);\n          }\n        }\n        rendererRef.current = null;\n        uniformsRef.current = null;\n        meshRef.current = null;\n      };\n    };\n    initializeWebGL();\n    return () => {\n      if (cleanupFunctionRef.current) {\n        cleanupFunctionRef.current();\n        cleanupFunctionRef.current = null;\n      }\n    };\n  }, [isVisible, raysOrigin, raysColor, raysSpeed, lightSpread, rayLength, pulsating, fadeDistance, saturation, followMouse, mouseInfluence, noiseAmount, distortion]);\n  useEffect(() => {\n    if (!uniformsRef.current || !containerRef.current || !rendererRef.current) return;\n    const u = uniformsRef.current;\n    const renderer = rendererRef.current;\n    u.raysColor.value = hexToRgb(raysColor);\n    u.raysSpeed.value = raysSpeed;\n    u.lightSpread.value = lightSpread;\n    u.rayLength.value = rayLength;\n    u.pulsating.value = pulsating ? 1.0 : 0.0;\n    u.fadeDistance.value = fadeDistance;\n    u.saturation.value = saturation;\n    u.mouseInfluence.value = mouseInfluence;\n    u.noiseAmount.value = noiseAmount;\n    u.distortion.value = distortion;\n    const {\n      clientWidth: wCSS,\n      clientHeight: hCSS\n    } = containerRef.current;\n    const dpr = renderer.dpr;\n    const {\n      anchor,\n      dir\n    } = getAnchorAndDir(raysOrigin, wCSS * dpr, hCSS * dpr);\n    u.rayPos.value = anchor;\n    u.rayDir.value = dir;\n  }, [raysColor, raysSpeed, lightSpread, raysOrigin, rayLength, pulsating, fadeDistance, saturation, mouseInfluence, noiseAmount, distortion]);\n  useEffect(() => {\n    const handleMouseMove = e => {\n      if (!containerRef.current || !rendererRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const x = (e.clientX - rect.left) / rect.width;\n      const y = (e.clientY - rect.top) / rect.height;\n      mouseRef.current = {\n        x,\n        y\n      };\n    };\n    if (followMouse) {\n      window.addEventListener(\"mousemove\", handleMouseMove);\n      return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n    }\n  }, [followMouse]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: `light-rays-container ${className}`.trim()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n};\n_s(LightRays, \"gkxaG+awg9r85Ws+gbq3bog+yME=\");\n_c = LightRays;\nexport default LightRays;\nvar _c;\n$RefreshReg$(_c, \"LightRays\");","map":{"version":3,"names":["useRef","useEffect","useState","OGL","jsxDEV","_jsxDEV","DEFAULT_COLOR","hexToRgb","hex","m","exec","parseInt","getAnchorAndDir","origin","w","h","outside","anchor","dir","LightRays","raysOrigin","raysColor","raysSpeed","lightSpread","rayLength","pulsating","fadeDistance","saturation","followMouse","mouseInfluence","noiseAmount","distortion","className","_s","containerRef","uniformsRef","rendererRef","mouseRef","x","y","smoothMouseRef","animationIdRef","meshRef","cleanupFunctionRef","isVisible","setIsVisible","observerRef","current","IntersectionObserver","entries","entry","isIntersecting","threshold","observe","disconnect","initializeWebGL","Promise","resolve","setTimeout","renderer","Renderer","dpr","Math","min","window","devicePixelRatio","alpha","gl","canvas","style","width","height","firstChild","removeChild","appendChild","vert","frag","uniforms","iTime","value","iResolution","rayPos","rayDir","mousePos","geometry","Triangle","program","Program","vertex","fragment","mesh","Mesh","updatePlacement","clientWidth","wCSS","clientHeight","hCSS","setSize","loop","t","smoothing","render","scene","requestAnimationFrame","error","console","warn","addEventListener","cancelAnimationFrame","removeEventListener","loseContextExt","getExtension","loseContext","parentNode","u","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","ref","trim","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/src/components/LightRays.jsx"],"sourcesContent":["import { useRef, useEffect, useState } from \"react\";\r\nimport * as OGL from \"ogl\";\r\n\r\nconst DEFAULT_COLOR = \"#57B2B6\";\r\n\r\nconst hexToRgb = (hex) => {\r\n  const m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return m\r\n    ? [\r\n      parseInt(m[1], 16) / 255,\r\n      parseInt(m[2], 16) / 255,\r\n      parseInt(m[3], 16) / 255,\r\n    ]\r\n    : [1, 1, 1];\r\n};\r\n\r\nconst getAnchorAndDir = (origin, w, h) => {\r\n  const outside = 0.2;\r\n  switch (origin) {\r\n    case \"top-left\":\r\n      return { anchor: [0, -outside * h], dir: [0, 1] };\r\n    case \"top-right\":\r\n      return { anchor: [w, -outside * h], dir: [0, 1] };\r\n    case \"left\":\r\n      return { anchor: [-outside * w, 0.5 * h], dir: [1, 0] };\r\n    case \"right\":\r\n      return { anchor: [(1 + outside) * w, 0.5 * h], dir: [-1, 0] };\r\n    case \"bottom-left\":\r\n      return { anchor: [0, (1 + outside) * h], dir: [0, -1] };\r\n    case \"bottom-center\":\r\n      return { anchor: [0.5 * w, (1 + outside) * h], dir: [0, -1] };\r\n    case \"bottom-right\":\r\n      return { anchor: [w, (1 + outside) * h], dir: [0, -1] };\r\n    default: // \"top-center\"\r\n      return { anchor: [0.5 * w, -outside * h], dir: [0, 1] };\r\n  }\r\n};\r\n\r\nconst LightRays = ({\r\n  raysOrigin = \"top-center\",\r\n  raysColor = DEFAULT_COLOR,\r\n  raysSpeed = 1,\r\n  lightSpread = 1,\r\n  rayLength = 2,\r\n  pulsating = false,\r\n  fadeDistance = 1.0,\r\n  saturation = 1.0,\r\n  followMouse = true,\r\n  mouseInfluence = 0.1,\r\n  noiseAmount = 0.0,\r\n  distortion = 0.1,\r\n  className = \"\",\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const uniformsRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const mouseRef = useRef({ x: 0.5, y: 0.5 });\r\n  const smoothMouseRef = useRef({ x: 0.5, y: 0.5 });\r\n  const animationIdRef = useRef(null);\r\n  const meshRef = useRef(null);\r\n  const cleanupFunctionRef = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const observerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return;\r\n\r\n    observerRef.current = new IntersectionObserver(\r\n      (entries) => {\r\n        const entry = entries[0];\r\n        setIsVisible(entry.isIntersecting);\r\n      },\r\n      { threshold: 0.1 }\r\n    );\r\n\r\n    observerRef.current.observe(containerRef.current);\r\n\r\n    return () => {\r\n      if (observerRef.current) {\r\n        observerRef.current.disconnect();\r\n        observerRef.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isVisible || !containerRef.current) return;\r\n\r\n    if (cleanupFunctionRef.current) {\r\n      cleanupFunctionRef.current();\r\n      cleanupFunctionRef.current = null;\r\n    }\r\n\r\n    const initializeWebGL = async () => {\r\n      if (!containerRef.current) return;\r\n\r\n      await new Promise((resolve) => setTimeout(resolve, 10));\r\n\r\n      if (!containerRef.current) return;\r\n\r\n      const renderer = new OGL.Renderer({\r\n        dpr: Math.min(window.devicePixelRatio, 2),\r\n        alpha: true,\r\n      });\r\n      rendererRef.current = renderer;\r\n\r\n      const gl = renderer.gl;\r\n      gl.canvas.style.width = \"100%\";\r\n      gl.canvas.style.height = \"100%\";\r\n\r\n      while (containerRef.current.firstChild) {\r\n        containerRef.current.removeChild(containerRef.current.firstChild);\r\n      }\r\n      containerRef.current.appendChild(gl.canvas);\r\n\r\n      const vert = `\r\nattribute vec2 position;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  vUv = position * 0.5 + 0.5;\r\n  gl_Position = vec4(position, 0.0, 1.0);\r\n}`;\r\n\r\n      const frag = `precision highp float;\r\n\r\nuniform float iTime;\r\nuniform vec2  iResolution;\r\n\r\nuniform vec2  rayPos;\r\nuniform vec2  rayDir;\r\nuniform vec3  raysColor;\r\nuniform float raysSpeed;\r\nuniform float lightSpread;\r\nuniform float rayLength;\r\nuniform float pulsating;\r\nuniform float fadeDistance;\r\nuniform float saturation;\r\nuniform vec2  mousePos;\r\nuniform float mouseInfluence;\r\nuniform float noiseAmount;\r\nuniform float distortion;\r\n\r\nvarying vec2 vUv;\r\n\r\nfloat noise(vec2 st) {\r\n  return fract(sin(dot(st.xy, vec2(12.9898,78.233))) * 43758.5453123);\r\n}\r\n\r\nfloat rayStrength(vec2 raySource, vec2 rayRefDirection, vec2 coord,\r\n                  float seedA, float seedB, float speed) {\r\n  vec2 sourceToCoord = coord - raySource;\r\n  vec2 dirNorm = normalize(sourceToCoord);\r\n  float cosAngle = dot(dirNorm, rayRefDirection);\r\n\r\n  float distortedAngle = cosAngle + distortion * sin(iTime * 2.0 + length(sourceToCoord) * 0.01) * 0.2;\r\n  \r\n  float spreadFactor = pow(max(distortedAngle, 0.0), 1.0 / max(lightSpread, 0.001));\r\n\r\n  float distance = length(sourceToCoord);\r\n  float maxDistance = iResolution.x * rayLength;\r\n  float lengthFalloff = clamp((maxDistance - distance) / maxDistance, 0.0, 1.0);\r\n  \r\n  float fadeFalloff = clamp((iResolution.x * fadeDistance - distance) / (iResolution.x * fadeDistance), 0.5, 1.0);\r\n  float pulse = pulsating > 0.5 ? (0.8 + 0.2 * sin(iTime * speed * 3.0)) : 1.0;\r\n\r\n  float baseStrength = clamp(\r\n    (0.45 + 0.15 * sin(distortedAngle * seedA + iTime * speed)) +\r\n    (0.3 + 0.2 * cos(-distortedAngle * seedB + iTime * speed)),\r\n    0.0, 1.0\r\n  );\r\n\r\n  return baseStrength * lengthFalloff * fadeFalloff * spreadFactor * pulse;\r\n}\r\n\r\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord) {\r\n  vec2 coord = vec2(fragCoord.x, iResolution.y - fragCoord.y);\r\n  \r\n  vec2 finalRayDir = rayDir;\r\n  if (mouseInfluence > 0.0) {\r\n    vec2 mouseScreenPos = mousePos * iResolution.xy;\r\n    vec2 mouseDirection = normalize(mouseScreenPos - rayPos);\r\n    finalRayDir = normalize(mix(rayDir, mouseDirection, mouseInfluence));\r\n  }\r\n\r\n  vec4 rays1 = vec4(1.0) *\r\n               rayStrength(rayPos, finalRayDir, coord, 36.2214, 21.11349,\r\n                           1.5 * raysSpeed);\r\n  vec4 rays2 = vec4(1.0) *\r\n               rayStrength(rayPos, finalRayDir, coord, 22.3991, 18.0234,\r\n                           1.1 * raysSpeed);\r\n\r\n  fragColor = rays1 * 0.5 + rays2 * 0.4;\r\n\r\n  if (noiseAmount > 0.0) {\r\n    float n = noise(coord * 0.01 + iTime * 0.1);\r\n    fragColor.rgb *= (1.0 - noiseAmount + noiseAmount * n);\r\n  }\r\n\r\n  float brightness = 1.0 - (coord.y / iResolution.y);\r\n  fragColor.x *= 0.1 + brightness * 0.8;\r\n  fragColor.y *= 0.3 + brightness * 0.6;\r\n  fragColor.z *= 0.5 + brightness * 0.5;\r\n\r\n  if (saturation != 1.0) {\r\n    float gray = dot(fragColor.rgb, vec3(0.299, 0.587, 0.114));\r\n    fragColor.rgb = mix(vec3(gray), fragColor.rgb, saturation);\r\n  }\r\n\r\n  fragColor.rgb *= raysColor;\r\n}\r\n\r\nvoid main() {\r\n  vec4 color;\r\n  mainImage(color, gl_FragCoord.xy);\r\n  gl_FragColor  = color;\r\n}`;\r\n\r\n      const uniforms = {\r\n        iTime: { value: 0 },\r\n        iResolution: { value: [1, 1] },\r\n\r\n        rayPos: { value: [0, 0] },\r\n        rayDir: { value: [0, 1] },\r\n\r\n        raysColor: { value: hexToRgb(raysColor) },\r\n        raysSpeed: { value: raysSpeed },\r\n        lightSpread: { value: lightSpread },\r\n        rayLength: { value: rayLength },\r\n        pulsating: { value: pulsating ? 1.0 : 0.0 },\r\n        fadeDistance: { value: fadeDistance },\r\n        saturation: { value: saturation },\r\n        mousePos: { value: [0.5, 0.5] },\r\n        mouseInfluence: { value: mouseInfluence },\r\n        noiseAmount: { value: noiseAmount },\r\n        distortion: { value: distortion },\r\n      };\r\n      uniformsRef.current = uniforms;\r\n\r\n      const geometry = new OGL.Triangle(gl);\r\n      const program = new OGL.Program(gl, {\r\n        vertex: vert,\r\n        fragment: frag,\r\n        uniforms,\r\n      });\r\n      const mesh = new OGL.Mesh(gl, { geometry, program });\r\n      meshRef.current = mesh;\r\n\r\n      const updatePlacement = () => {\r\n        if (!containerRef.current || !renderer) return;\r\n\r\n        renderer.dpr = Math.min(window.devicePixelRatio, 2);\r\n\r\n        const { clientWidth: wCSS, clientHeight: hCSS } = containerRef.current;\r\n        renderer.setSize(wCSS, hCSS);\r\n\r\n        const dpr = renderer.dpr;\r\n        const w = wCSS * dpr;\r\n        const h = hCSS * dpr;\r\n\r\n        uniforms.iResolution.value = [w, h];\r\n\r\n        const { anchor, dir } = getAnchorAndDir(raysOrigin, w, h);\r\n        uniforms.rayPos.value = anchor;\r\n        uniforms.rayDir.value = dir;\r\n      };\r\n\r\n      const loop = (t) => {\r\n        if (!rendererRef.current || !uniformsRef.current || !meshRef.current) {\r\n          return;\r\n        }\r\n\r\n        uniforms.iTime.value = t * 0.001;\r\n\r\n        if (followMouse && mouseInfluence > 0.0) {\r\n          const smoothing = 0.92;\r\n\r\n          smoothMouseRef.current.x =\r\n            smoothMouseRef.current.x * smoothing +\r\n            mouseRef.current.x * (1 - smoothing);\r\n          smoothMouseRef.current.y =\r\n            smoothMouseRef.current.y * smoothing +\r\n            mouseRef.current.y * (1 - smoothing);\r\n\r\n          uniforms.mousePos.value = [\r\n            smoothMouseRef.current.x,\r\n            smoothMouseRef.current.y,\r\n          ];\r\n        }\r\n\r\n        try {\r\n          renderer.render({ scene: mesh });\r\n          animationIdRef.current = requestAnimationFrame(loop);\r\n        } catch (error) {\r\n          console.warn(\"WebGL rendering error:\", error);\r\n          return;\r\n        }\r\n      };\r\n\r\n      window.addEventListener(\"resize\", updatePlacement);\r\n      updatePlacement();\r\n      animationIdRef.current = requestAnimationFrame(loop);\r\n\r\n      cleanupFunctionRef.current = () => {\r\n        if (animationIdRef.current) {\r\n          cancelAnimationFrame(animationIdRef.current);\r\n          animationIdRef.current = null;\r\n        }\r\n\r\n        window.removeEventListener(\"resize\", updatePlacement);\r\n\r\n        if (renderer) {\r\n          try {\r\n            const canvas = renderer.gl.canvas;\r\n            const loseContextExt =\r\n              renderer.gl.getExtension(\"WEBGL_lose_context\");\r\n            if (loseContextExt) {\r\n              loseContextExt.loseContext();\r\n            }\r\n\r\n            if (canvas && canvas.parentNode) {\r\n              canvas.parentNode.removeChild(canvas);\r\n            }\r\n          } catch (error) {\r\n            console.warn(\"Error during WebGL cleanup:\", error);\r\n          }\r\n        }\r\n\r\n        rendererRef.current = null;\r\n        uniformsRef.current = null;\r\n        meshRef.current = null;\r\n      };\r\n    };\r\n\r\n    initializeWebGL();\r\n\r\n    return () => {\r\n      if (cleanupFunctionRef.current) {\r\n        cleanupFunctionRef.current();\r\n        cleanupFunctionRef.current = null;\r\n      }\r\n    };\r\n  }, [\r\n    isVisible,\r\n    raysOrigin,\r\n    raysColor,\r\n    raysSpeed,\r\n    lightSpread,\r\n    rayLength,\r\n    pulsating,\r\n    fadeDistance,\r\n    saturation,\r\n    followMouse,\r\n    mouseInfluence,\r\n    noiseAmount,\r\n    distortion,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!uniformsRef.current || !containerRef.current || !rendererRef.current)\r\n      return;\r\n\r\n    const u = uniformsRef.current;\r\n    const renderer = rendererRef.current;\r\n\r\n    u.raysColor.value = hexToRgb(raysColor);\r\n    u.raysSpeed.value = raysSpeed;\r\n    u.lightSpread.value = lightSpread;\r\n    u.rayLength.value = rayLength;\r\n    u.pulsating.value = pulsating ? 1.0 : 0.0;\r\n    u.fadeDistance.value = fadeDistance;\r\n    u.saturation.value = saturation;\r\n    u.mouseInfluence.value = mouseInfluence;\r\n    u.noiseAmount.value = noiseAmount;\r\n    u.distortion.value = distortion;\r\n\r\n    const { clientWidth: wCSS, clientHeight: hCSS } = containerRef.current;\r\n    const dpr = renderer.dpr;\r\n    const { anchor, dir } = getAnchorAndDir(raysOrigin, wCSS * dpr, hCSS * dpr);\r\n    u.rayPos.value = anchor;\r\n    u.rayDir.value = dir;\r\n  }, [\r\n    raysColor,\r\n    raysSpeed,\r\n    lightSpread,\r\n    raysOrigin,\r\n    rayLength,\r\n    pulsating,\r\n    fadeDistance,\r\n    saturation,\r\n    mouseInfluence,\r\n    noiseAmount,\r\n    distortion,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      if (!containerRef.current || !rendererRef.current) return;\r\n      const rect = containerRef.current.getBoundingClientRect();\r\n      const x = (e.clientX - rect.left) / rect.width;\r\n      const y = (e.clientY - rect.top) / rect.height;\r\n      mouseRef.current = { x, y };\r\n    };\r\n\r\n    if (followMouse) {\r\n      window.addEventListener(\"mousemove\", handleMouseMove);\r\n      return () => window.removeEventListener(\"mousemove\", handleMouseMove);\r\n    }\r\n  }, [followMouse]);\r\n\r\n  return (\r\n    <div \r\n      ref={containerRef}\r\n      className={`light-rays-container ${className}`.trim()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LightRays;\r\n"],"mappings":"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B,EAAE,CAAC,CAAC;QACzCC,KAAK,EAAE;MACT,CAAC,CAAC;MACF9B,WAAW,CAACW,OAAO,GAAGY,QAAQ;MAE9B,MAAMQ,EAAE,GAAGR,QAAQ,CAACQ,EAAE;MACtBA,EAAE,CAACC,MAAM,CAACC,KAAK,CAACC,KAAK,GAAG,MAAM;MAC9BH,EAAE,CAACC,MAAM,CAACC,KAAK,CAACE,MAAM,GAAG,MAAM;MAE/B,OAAOrC,YAAY,CAACa,OAAO,CAACyB,UAAU,EAAE;QACtCtC,YAAY,CAACa,OAAO,CAAC0B,WAAW,CAACvC,YAAY,CAACa,OAAO,CAACyB,UAAU,CAAC;MACnE;MACAtC,YAAY,CAACa,OAAO,CAAC2B,WAAW,CAACP,EAAE,CAACC,MAAM,CAAC;MAE3C,MAAMO,IAAI,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA,EAAE;MAEI,MAAMC,IAAI,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;MAEI,MAAMC,QAAQ,GAAG;QACfC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAE,CAAC;QACnBC,WAAW,EAAE;UAAED,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;QAAE,CAAC;QAE9BE,MAAM,EAAE;UAAEF,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;QAAE,CAAC;QACzBG,MAAM,EAAE;UAAEH,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;QAAE,CAAC;QAEzB1D,SAAS,EAAE;UAAE0D,KAAK,EAAExE,QAAQ,CAACc,SAAS;QAAE,CAAC;QACzCC,SAAS,EAAE;UAAEyD,KAAK,EAAEzD;QAAU,CAAC;QAC/BC,WAAW,EAAE;UAAEwD,KAAK,EAAExD;QAAY,CAAC;QACnCC,SAAS,EAAE;UAAEuD,KAAK,EAAEvD;QAAU,CAAC;QAC/BC,SAAS,EAAE;UAAEsD,KAAK,EAAEtD,SAAS,GAAG,GAAG,GAAG;QAAI,CAAC;QAC3CC,YAAY,EAAE;UAAEqD,KAAK,EAAErD;QAAa,CAAC;QACrCC,UAAU,EAAE;UAAEoD,KAAK,EAAEpD;QAAW,CAAC;QACjCwD,QAAQ,EAAE;UAAEJ,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG;QAAE,CAAC;QAC/BlD,cAAc,EAAE;UAAEkD,KAAK,EAAElD;QAAe,CAAC;QACzCC,WAAW,EAAE;UAAEiD,KAAK,EAAEjD;QAAY,CAAC;QACnCC,UAAU,EAAE;UAAEgD,KAAK,EAAEhD;QAAW;MAClC,CAAC;MACDI,WAAW,CAACY,OAAO,GAAG8B,QAAQ;MAE9B,MAAMO,QAAQ,GAAG,IAAIjF,GAAG,CAACkF,QAAQ,CAAClB,EAAE,CAAC;MACrC,MAAMmB,OAAO,GAAG,IAAInF,GAAG,CAACoF,OAAO,CAACpB,EAAE,EAAE;QAClCqB,MAAM,EAAEb,IAAI;QACZc,QAAQ,EAAEb,IAAI;QACdC;MACF,CAAC,CAAC;MACF,MAAMa,IAAI,GAAG,IAAIvF,GAAG,CAACwF,IAAI,CAACxB,EAAE,EAAE;QAAEiB,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MACpD5C,OAAO,CAACK,OAAO,GAAG2C,IAAI;MAEtB,MAAME,eAAe,GAAGA,CAAA,KAAM;QAC5B,IAAI,CAAC1D,YAAY,CAACa,OAAO,IAAI,CAACY,QAAQ,EAAE;QAExCA,QAAQ,CAACE,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACC,MAAM,CAACC,gBAAgB,EAAE,CAAC,CAAC;QAEnD,MAAM;UAAE4B,WAAW,EAAEC,IAAI;UAAEC,YAAY,EAAEC;QAAK,CAAC,GAAG9D,YAAY,CAACa,OAAO;QACtEY,QAAQ,CAACsC,OAAO,CAACH,IAAI,EAAEE,IAAI,CAAC;QAE5B,MAAMnC,GAAG,GAAGF,QAAQ,CAACE,GAAG;QACxB,MAAM/C,CAAC,GAAGgF,IAAI,GAAGjC,GAAG;QACpB,MAAM9C,CAAC,GAAGiF,IAAI,GAAGnC,GAAG;QAEpBgB,QAAQ,CAACG,WAAW,CAACD,KAAK,GAAG,CAACjE,CAAC,EAAEC,CAAC,CAAC;QAEnC,MAAM;UAAEE,MAAM;UAAEC;QAAI,CAAC,GAAGN,eAAe,CAACQ,UAAU,EAAEN,CAAC,EAAEC,CAAC,CAAC;QACzD8D,QAAQ,CAACI,MAAM,CAACF,KAAK,GAAG9D,MAAM;QAC9B4D,QAAQ,CAACK,MAAM,CAACH,KAAK,GAAG7D,GAAG;MAC7B,CAAC;MAED,MAAMgF,IAAI,GAAIC,CAAC,IAAK;QAClB,IAAI,CAAC/D,WAAW,CAACW,OAAO,IAAI,CAACZ,WAAW,CAACY,OAAO,IAAI,CAACL,OAAO,CAACK,OAAO,EAAE;UACpE;QACF;QAEA8B,QAAQ,CAACC,KAAK,CAACC,KAAK,GAAGoB,CAAC,GAAG,KAAK;QAEhC,IAAIvE,WAAW,IAAIC,cAAc,GAAG,GAAG,EAAE;UACvC,MAAMuE,SAAS,GAAG,IAAI;UAEtB5D,cAAc,CAACO,OAAO,CAACT,CAAC,GACtBE,cAAc,CAACO,OAAO,CAACT,CAAC,GAAG8D,SAAS,GACpC/D,QAAQ,CAACU,OAAO,CAACT,CAAC,IAAI,CAAC,GAAG8D,SAAS,CAAC;UACtC5D,cAAc,CAACO,OAAO,CAACR,CAAC,GACtBC,cAAc,CAACO,OAAO,CAACR,CAAC,GAAG6D,SAAS,GACpC/D,QAAQ,CAACU,OAAO,CAACR,CAAC,IAAI,CAAC,GAAG6D,SAAS,CAAC;UAEtCvB,QAAQ,CAACM,QAAQ,CAACJ,KAAK,GAAG,CACxBvC,cAAc,CAACO,OAAO,CAACT,CAAC,EACxBE,cAAc,CAACO,OAAO,CAACR,CAAC,CACzB;QACH;QAEA,IAAI;UACFoB,QAAQ,CAAC0C,MAAM,CAAC;YAAEC,KAAK,EAAEZ;UAAK,CAAC,CAAC;UAChCjD,cAAc,CAACM,OAAO,GAAGwD,qBAAqB,CAACL,IAAI,CAAC;QACtD,CAAC,CAAC,OAAOM,KAAK,EAAE;UACdC,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEF,KAAK,CAAC;UAC7C;QACF;MACF,CAAC;MAEDxC,MAAM,CAAC2C,gBAAgB,CAAC,QAAQ,EAAEf,eAAe,CAAC;MAClDA,eAAe,CAAC,CAAC;MACjBnD,cAAc,CAACM,OAAO,GAAGwD,qBAAqB,CAACL,IAAI,CAAC;MAEpDvD,kBAAkB,CAACI,OAAO,GAAG,MAAM;QACjC,IAAIN,cAAc,CAACM,OAAO,EAAE;UAC1B6D,oBAAoB,CAACnE,cAAc,CAACM,OAAO,CAAC;UAC5CN,cAAc,CAACM,OAAO,GAAG,IAAI;QAC/B;QAEAiB,MAAM,CAAC6C,mBAAmB,CAAC,QAAQ,EAAEjB,eAAe,CAAC;QAErD,IAAIjC,QAAQ,EAAE;UACZ,IAAI;YACF,MAAMS,MAAM,GAAGT,QAAQ,CAACQ,EAAE,CAACC,MAAM;YACjC,MAAM0C,cAAc,GAClBnD,QAAQ,CAACQ,EAAE,CAAC4C,YAAY,CAAC,oBAAoB,CAAC;YAChD,IAAID,cAAc,EAAE;cAClBA,cAAc,CAACE,WAAW,CAAC,CAAC;YAC9B;YAEA,IAAI5C,MAAM,IAAIA,MAAM,CAAC6C,UAAU,EAAE;cAC/B7C,MAAM,CAAC6C,UAAU,CAACxC,WAAW,CAACL,MAAM,CAAC;YACvC;UACF,CAAC,CAAC,OAAOoC,KAAK,EAAE;YACdC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEF,KAAK,CAAC;UACpD;QACF;QAEApE,WAAW,CAACW,OAAO,GAAG,IAAI;QAC1BZ,WAAW,CAACY,OAAO,GAAG,IAAI;QAC1BL,OAAO,CAACK,OAAO,GAAG,IAAI;MACxB,CAAC;IACH,CAAC;IAEDQ,eAAe,CAAC,CAAC;IAEjB,OAAO,MAAM;MACX,IAAIZ,kBAAkB,CAACI,OAAO,EAAE;QAC9BJ,kBAAkB,CAACI,OAAO,CAAC,CAAC;QAC5BJ,kBAAkB,CAACI,OAAO,GAAG,IAAI;MACnC;IACF,CAAC;EACH,CAAC,EAAE,CACDH,SAAS,EACTxB,UAAU,EACVC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,UAAU,CACX,CAAC;EAEF9B,SAAS,CAAC,MAAM;IACd,IAAI,CAACkC,WAAW,CAACY,OAAO,IAAI,CAACb,YAAY,CAACa,OAAO,IAAI,CAACX,WAAW,CAACW,OAAO,EACvE;IAEF,MAAMmE,CAAC,GAAG/E,WAAW,CAACY,OAAO;IAC7B,MAAMY,QAAQ,GAAGvB,WAAW,CAACW,OAAO;IAEpCmE,CAAC,CAAC7F,SAAS,CAAC0D,KAAK,GAAGxE,QAAQ,CAACc,SAAS,CAAC;IACvC6F,CAAC,CAAC5F,SAAS,CAACyD,KAAK,GAAGzD,SAAS;IAC7B4F,CAAC,CAAC3F,WAAW,CAACwD,KAAK,GAAGxD,WAAW;IACjC2F,CAAC,CAAC1F,SAAS,CAACuD,KAAK,GAAGvD,SAAS;IAC7B0F,CAAC,CAACzF,SAAS,CAACsD,KAAK,GAAGtD,SAAS,GAAG,GAAG,GAAG,GAAG;IACzCyF,CAAC,CAACxF,YAAY,CAACqD,KAAK,GAAGrD,YAAY;IACnCwF,CAAC,CAACvF,UAAU,CAACoD,KAAK,GAAGpD,UAAU;IAC/BuF,CAAC,CAACrF,cAAc,CAACkD,KAAK,GAAGlD,cAAc;IACvCqF,CAAC,CAACpF,WAAW,CAACiD,KAAK,GAAGjD,WAAW;IACjCoF,CAAC,CAACnF,UAAU,CAACgD,KAAK,GAAGhD,UAAU;IAE/B,MAAM;MAAE8D,WAAW,EAAEC,IAAI;MAAEC,YAAY,EAAEC;IAAK,CAAC,GAAG9D,YAAY,CAACa,OAAO;IACtE,MAAMc,GAAG,GAAGF,QAAQ,CAACE,GAAG;IACxB,MAAM;MAAE5C,MAAM;MAAEC;IAAI,CAAC,GAAGN,eAAe,CAACQ,UAAU,EAAE0E,IAAI,GAAGjC,GAAG,EAAEmC,IAAI,GAAGnC,GAAG,CAAC;IAC3EqD,CAAC,CAACjC,MAAM,CAACF,KAAK,GAAG9D,MAAM;IACvBiG,CAAC,CAAChC,MAAM,CAACH,KAAK,GAAG7D,GAAG;EACtB,CAAC,EAAE,CACDG,SAAS,EACTC,SAAS,EACTC,WAAW,EACXH,UAAU,EACVI,SAAS,EACTC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVE,cAAc,EACdC,WAAW,EACXC,UAAU,CACX,CAAC;EAEF9B,SAAS,CAAC,MAAM;IACd,MAAMkH,eAAe,GAAIC,CAAC,IAAK;MAC7B,IAAI,CAAClF,YAAY,CAACa,OAAO,IAAI,CAACX,WAAW,CAACW,OAAO,EAAE;MACnD,MAAMsE,IAAI,GAAGnF,YAAY,CAACa,OAAO,CAACuE,qBAAqB,CAAC,CAAC;MACzD,MAAMhF,CAAC,GAAG,CAAC8E,CAAC,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI,IAAIH,IAAI,CAAC/C,KAAK;MAC9C,MAAM/B,CAAC,GAAG,CAAC6E,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACK,GAAG,IAAIL,IAAI,CAAC9C,MAAM;MAC9ClC,QAAQ,CAACU,OAAO,GAAG;QAAET,CAAC;QAAEC;MAAE,CAAC;IAC7B,CAAC;IAED,IAAIX,WAAW,EAAE;MACfoC,MAAM,CAAC2C,gBAAgB,CAAC,WAAW,EAAEQ,eAAe,CAAC;MACrD,OAAO,MAAMnD,MAAM,CAAC6C,mBAAmB,CAAC,WAAW,EAAEM,eAAe,CAAC;IACvE;EACF,CAAC,EAAE,CAACvF,WAAW,CAAC,CAAC;EAEjB,oBACEvB,OAAA;IACEsH,GAAG,EAAEzF,YAAa;IAClBF,SAAS,EAAE,wBAAwBA,SAAS,EAAE,CAAC4F,IAAI,CAAC;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEN,CAAC;AAAC/F,EAAA,CAzXId,SAAS;AAAA8G,EAAA,GAAT9G,SAAS;AA2Xf,eAAeA,SAAS;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}