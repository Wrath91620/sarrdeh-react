{"ast":null,"code":"import { Transform } from '../core/Transform.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec4 } from '../math/Vec4.js';\nexport class InstancedMesh extends Mesh {\n  constructor(...args) {\n    super(...args);\n\n    // Skip renderer frustum culling\n    this.frustumCulled = false;\n    this.isInstancedMesh = true;\n  }\n  addFrustumCull() {\n    this.instanceTransforms = null;\n    this.instanceLightmapScaleOffset = null;\n    this.totalInstanceCount = 0;\n    this.frustumCullFunction = null;\n    this.instanceRenderList = null;\n\n    // Get instanced mesh\n    if (!this.geometry.attributes.instanceMatrix) console.error(`mesh ${this.name ? `\"${this.name}\" ` : ``}missing instanceMatrix attribute; unable to frustum cull`);\n\n    // Make list of transforms from instanceMatrix\n    const matrixData = this.geometry.attributes.instanceMatrix.data;\n    this.instanceTransforms = [];\n    for (let i = 0, j = 0; i < matrixData.length; i += 16, j++) {\n      const transform = new Transform();\n      transform.index = j;\n      transform.matrix.fromArray(matrixData, i);\n      transform.decompose();\n      this.instanceTransforms.push(transform);\n      // Add transforms to parent to update world matrices\n      transform.setParent(this.parent);\n    }\n    this.totalInstanceCount = this.instanceTransforms.length;\n\n    // Check for lightmap attributes - attach to transform\n    if (!!this.geometry.attributes.lightmapScaleOffset) {\n      const lightmapData = this.geometry.attributes.lightmapScaleOffset.data;\n      for (let i = 0, j = 0; i < lightmapData.length; i += 4, j++) {\n        this.instanceTransforms[j].lightmapData = new Vec4().fromArray(lightmapData, i);\n      }\n    }\n    this.frustumCullFunction = ({\n      camera\n    }) => {\n      // frustum cull transforms each frame - pass world matrix\n      this.instanceRenderList = [];\n      this.instanceTransforms.forEach(transform => {\n        if (!camera.frustumIntersectsMesh(this, transform.worldMatrix)) return;\n        this.instanceRenderList.push(transform);\n      });\n\n      // update instanceMatrix and instancedCount with visible\n      this.instanceRenderList.forEach((transform, i) => {\n        transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\n\n        // Update lightmap attr\n        if (transform.lightmapData) {\n          transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\n          this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n        }\n      });\n      this.geometry.instancedCount = this.instanceRenderList.length;\n      this.geometry.attributes.instanceMatrix.needsUpdate = true;\n    };\n    this.onBeforeRender(this.frustumCullFunction);\n  }\n  removeFrustumCull() {\n    this.offBeforeRender(this.frustumCullFunction);\n    this.geometry.instancedCount = this.totalInstanceCount;\n    this.instanceTransforms.forEach((transform, i) => {\n      transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\n\n      // Update lightmap attr\n      if (transform.lightmapData) {\n        transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\n        this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n      }\n    });\n    this.geometry.attributes.instanceMatrix.needsUpdate = true;\n  }\n}","map":{"version":3,"names":["Transform","Mesh","Vec4","InstancedMesh","constructor","args","frustumCulled","isInstancedMesh","addFrustumCull","instanceTransforms","instanceLightmapScaleOffset","totalInstanceCount","frustumCullFunction","instanceRenderList","geometry","attributes","instanceMatrix","console","error","name","matrixData","data","i","j","length","transform","index","matrix","fromArray","decompose","push","setParent","parent","lightmapScaleOffset","lightmapData","camera","forEach","frustumIntersectsMesh","worldMatrix","toArray","needsUpdate","instancedCount","onBeforeRender","removeFrustumCull","offBeforeRender"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/node_modules/ogl/src/extras/InstancedMesh.js"],"sourcesContent":["import { Transform } from '../core/Transform.js';\r\nimport { Mesh } from '../core/Mesh.js';\r\nimport { Vec4 } from '../math/Vec4.js';\r\n\r\nexport class InstancedMesh extends Mesh {\r\n    constructor(...args) {\r\n        super(...args);\r\n\r\n        // Skip renderer frustum culling\r\n        this.frustumCulled = false;\r\n        this.isInstancedMesh = true;\r\n    }\r\n\r\n    addFrustumCull() {\r\n        this.instanceTransforms = null;\r\n        this.instanceLightmapScaleOffset = null;\r\n        this.totalInstanceCount = 0;\r\n        this.frustumCullFunction = null;\r\n        this.instanceRenderList = null;\r\n\r\n        // Get instanced mesh\r\n        if (!this.geometry.attributes.instanceMatrix)\r\n            console.error(`mesh ${this.name ? `\"${this.name}\" ` : ``}missing instanceMatrix attribute; unable to frustum cull`);\r\n\r\n        // Make list of transforms from instanceMatrix\r\n        const matrixData = this.geometry.attributes.instanceMatrix.data;\r\n        this.instanceTransforms = [];\r\n        for (let i = 0, j = 0; i < matrixData.length; i += 16, j++) {\r\n            const transform = new Transform();\r\n            transform.index = j;\r\n            transform.matrix.fromArray(matrixData, i);\r\n            transform.decompose();\r\n            this.instanceTransforms.push(transform);\r\n            // Add transforms to parent to update world matrices\r\n            transform.setParent(this.parent);\r\n        }\r\n        this.totalInstanceCount = this.instanceTransforms.length;\r\n\r\n        // Check for lightmap attributes - attach to transform\r\n        if (!!this.geometry.attributes.lightmapScaleOffset) {\r\n            const lightmapData = this.geometry.attributes.lightmapScaleOffset.data;\r\n            for (let i = 0, j = 0; i < lightmapData.length; i += 4, j++) {\r\n                this.instanceTransforms[j].lightmapData = new Vec4().fromArray(lightmapData, i);\r\n            }\r\n        }\r\n\r\n        this.frustumCullFunction = ({ camera }) => {\r\n            // frustum cull transforms each frame - pass world matrix\r\n            this.instanceRenderList = [];\r\n            this.instanceTransforms.forEach((transform) => {\r\n                if (!camera.frustumIntersectsMesh(this, transform.worldMatrix)) return;\r\n                this.instanceRenderList.push(transform);\r\n            });\r\n\r\n            // update instanceMatrix and instancedCount with visible\r\n            this.instanceRenderList.forEach((transform, i) => {\r\n                transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\r\n\r\n                // Update lightmap attr\r\n                if (transform.lightmapData) {\r\n                    transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\r\n                    this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\r\n                }\r\n            });\r\n            this.geometry.instancedCount = this.instanceRenderList.length;\r\n            this.geometry.attributes.instanceMatrix.needsUpdate = true;\r\n        };\r\n\r\n        this.onBeforeRender(this.frustumCullFunction);\r\n    }\r\n\r\n    removeFrustumCull() {\r\n        this.offBeforeRender(this.frustumCullFunction);\r\n        this.geometry.instancedCount = this.totalInstanceCount;\r\n        this.instanceTransforms.forEach((transform, i) => {\r\n            transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\r\n\r\n            // Update lightmap attr\r\n            if (transform.lightmapData) {\r\n                transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\r\n                this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\r\n            }\r\n        });\r\n        this.geometry.attributes.instanceMatrix.needsUpdate = true;\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}