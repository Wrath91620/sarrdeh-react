{"ast":null,"code":"import{useRef,useEffect}from\"react\";import{Renderer,Program,Triangle,Mesh}from\"ogl\";import\"./RippleGrid.css\";import{jsx as _jsx}from\"react/jsx-runtime\";const RippleGrid=_ref=>{let{enableRainbow=false,gridColor=\"#ffffff\",rippleIntensity=0.05,gridSize=10.0,gridThickness=15.0,fadeDistance=1.5,vignetteStrength=2.0,glowIntensity=0.1,opacity=1.0,gridRotation=0,mouseInteraction=true,mouseInteractionRadius=1}=_ref;const containerRef=useRef(null);const mousePositionRef=useRef({x:0.5,y:0.5});const targetMouseRef=useRef({x:0.5,y:0.5});const mouseInfluenceRef=useRef(0);const uniformsRef=useRef(null);useEffect(()=>{if(!containerRef.current)return;const hexToRgb=hex=>{const result=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);return result?[parseInt(result[1],16)/255,parseInt(result[2],16)/255,parseInt(result[3],16)/255]:[1,1,1];};const renderer=new Renderer({dpr:Math.min(window.devicePixelRatio,2),alpha:true});const gl=renderer.gl;gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.canvas.style.width=\"100%\";gl.canvas.style.height=\"100%\";containerRef.current.appendChild(gl.canvas);const vert=`\nattribute vec2 position;\nvarying vec2 vUv;\nvoid main() {\n    vUv = position * 0.5 + 0.5;\n    gl_Position = vec4(position, 0.0, 1.0);\n}`;const frag=`precision highp float;\nuniform float iTime;\nuniform vec2 iResolution;\nuniform bool enableRainbow;\nuniform vec3 gridColor;\nuniform float rippleIntensity;\nuniform float gridSize;\nuniform float gridThickness;\nuniform float fadeDistance;\nuniform float vignetteStrength;\nuniform float glowIntensity;\nuniform float opacity;\nuniform float gridRotation;\nuniform bool mouseInteraction;\nuniform vec2 mousePosition;\nuniform float mouseInfluence;\nuniform float mouseInteractionRadius;\nvarying vec2 vUv;\n\nfloat pi = 3.141592;\n\nmat2 rotate(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nvoid main() {\n    vec2 uv = vUv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    if (gridRotation != 0.0) {\n        uv = rotate(gridRotation * pi / 180.0) * uv;\n    }\n\n    float dist = length(uv);\n    float func = sin(pi * (iTime - dist));\n    vec2 rippleUv = uv + uv * func * rippleIntensity;\n\n    if (mouseInteraction && mouseInfluence > 0.0) {\n        vec2 mouseUv = (mousePosition * 2.0 - 1.0);\n        mouseUv.x *= iResolution.x / iResolution.y;\n        float mouseDist = length(uv - mouseUv);\n        \n        float influence = mouseInfluence * exp(-mouseDist * mouseDist / (mouseInteractionRadius * mouseInteractionRadius));\n        \n        float mouseWave = sin(pi * (iTime * 2.0 - mouseDist * 3.0)) * influence;\n        rippleUv += normalize(uv - mouseUv) * mouseWave * rippleIntensity * 0.3;\n    }\n\n    vec2 a = sin(gridSize * 0.5 * pi * rippleUv - pi / 2.0);\n    vec2 b = abs(a);\n\n    float aaWidth = 0.5;\n    vec2 smoothB = vec2(\n        smoothstep(0.0, aaWidth, b.x),\n        smoothstep(0.0, aaWidth, b.y)\n    );\n\n    vec3 color = vec3(0.0);\n    color += exp(-gridThickness * smoothB.x * (0.8 + 0.5 * sin(pi * iTime)));\n    color += exp(-gridThickness * smoothB.y);\n    color += 0.5 * exp(-(gridThickness / 4.0) * sin(smoothB.x));\n    color += 0.5 * exp(-(gridThickness / 3.0) * smoothB.y);\n\n    if (glowIntensity > 0.0) {\n        color += glowIntensity * exp(-gridThickness * 0.5 * smoothB.x);\n        color += glowIntensity * exp(-gridThickness * 0.5 * smoothB.y);\n    }\n\n    float ddd = exp(-2.0 * clamp(pow(dist, fadeDistance), 0.0, 1.0));\n    \n    vec2 vignetteCoords = vUv - 0.5;\n    float vignetteDistance = length(vignetteCoords);\n    float vignette = 1.0 - pow(vignetteDistance * 2.0, vignetteStrength);\n    vignette = clamp(vignette, 0.0, 1.0);\n    \n    vec3 t;\n    if (enableRainbow) {\n        t = vec3(\n            uv.x * 0.5 + 0.5 * sin(iTime),\n            uv.y * 0.5 + 0.5 * cos(iTime),\n            pow(cos(iTime), 4.0)\n        ) + 0.5;\n    } else {\n        t = gridColor;\n    }\n\n    float finalFade = ddd * vignette;\n    float alpha = length(color) * finalFade * opacity;\n    gl_FragColor = vec4(color * t * finalFade * opacity, alpha);\n}`;const uniforms={iTime:{value:0},iResolution:{value:[1,1]},enableRainbow:{value:enableRainbow},gridColor:{value:hexToRgb(gridColor)},rippleIntensity:{value:rippleIntensity},gridSize:{value:gridSize},gridThickness:{value:gridThickness},fadeDistance:{value:fadeDistance},vignetteStrength:{value:vignetteStrength},glowIntensity:{value:glowIntensity},opacity:{value:opacity},gridRotation:{value:gridRotation},mouseInteraction:{value:mouseInteraction},mousePosition:{value:[0.5,0.5]},mouseInfluence:{value:0},mouseInteractionRadius:{value:mouseInteractionRadius}};uniformsRef.current=uniforms;const geometry=new Triangle(gl);const program=new Program(gl,{vertex:vert,fragment:frag,uniforms});const mesh=new Mesh(gl,{geometry,program});const resize=()=>{const{clientWidth:w,clientHeight:h}=containerRef.current;renderer.setSize(w,h);uniforms.iResolution.value=[w,h];};const handleMouseMove=e=>{if(!mouseInteraction||!containerRef.current)return;const rect=containerRef.current.getBoundingClientRect();const x=(e.clientX-rect.left)/rect.width;const y=1.0-(e.clientY-rect.top)/rect.height;// Flip Y coordinate\ntargetMouseRef.current={x,y};};const handleMouseEnter=()=>{if(!mouseInteraction)return;mouseInfluenceRef.current=1.0;};const handleMouseLeave=()=>{if(!mouseInteraction)return;mouseInfluenceRef.current=0.0;};window.addEventListener(\"resize\",resize);if(mouseInteraction){containerRef.current.addEventListener(\"mousemove\",handleMouseMove);containerRef.current.addEventListener(\"mouseenter\",handleMouseEnter);containerRef.current.addEventListener(\"mouseleave\",handleMouseLeave);}resize();const render=t=>{uniforms.iTime.value=t*0.001;const lerpFactor=0.1;mousePositionRef.current.x+=(targetMouseRef.current.x-mousePositionRef.current.x)*lerpFactor;mousePositionRef.current.y+=(targetMouseRef.current.y-mousePositionRef.current.y)*lerpFactor;const currentInfluence=uniforms.mouseInfluence.value;const targetInfluence=mouseInfluenceRef.current;uniforms.mouseInfluence.value+=(targetInfluence-currentInfluence)*0.05;uniforms.mousePosition.value=[mousePositionRef.current.x,mousePositionRef.current.y];renderer.render({scene:mesh});requestAnimationFrame(render);};requestAnimationFrame(render);return()=>{var _renderer$gl$getExten,_containerRef$current;window.removeEventListener(\"resize\",resize);if(mouseInteraction&&containerRef.current){containerRef.current.removeEventListener(\"mousemove\",handleMouseMove);containerRef.current.removeEventListener(\"mouseenter\",handleMouseEnter);containerRef.current.removeEventListener(\"mouseleave\",handleMouseLeave);}(_renderer$gl$getExten=renderer.gl.getExtension(\"WEBGL_lose_context\"))===null||_renderer$gl$getExten===void 0?void 0:_renderer$gl$getExten.loseContext();(_containerRef$current=containerRef.current)===null||_containerRef$current===void 0?void 0:_containerRef$current.removeChild(gl.canvas);};},[]);useEffect(()=>{if(!uniformsRef.current)return;const hexToRgb=hex=>{const result=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);return result?[parseInt(result[1],16)/255,parseInt(result[2],16)/255,parseInt(result[3],16)/255]:[1,1,1];};uniformsRef.current.enableRainbow.value=enableRainbow;uniformsRef.current.gridColor.value=hexToRgb(gridColor);uniformsRef.current.rippleIntensity.value=rippleIntensity;uniformsRef.current.gridSize.value=gridSize;uniformsRef.current.gridThickness.value=gridThickness;uniformsRef.current.fadeDistance.value=fadeDistance;uniformsRef.current.vignetteStrength.value=vignetteStrength;uniformsRef.current.glowIntensity.value=glowIntensity;uniformsRef.current.opacity.value=opacity;uniformsRef.current.gridRotation.value=gridRotation;uniformsRef.current.mouseInteraction.value=mouseInteraction;uniformsRef.current.mouseInteractionRadius.value=mouseInteractionRadius;},[enableRainbow,gridColor,rippleIntensity,gridSize,gridThickness,fadeDistance,vignetteStrength,glowIntensity,opacity,gridRotation,mouseInteraction,mouseInteractionRadius]);return/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:\"ripple-grid-container\"});};export default RippleGrid;","map":{"version":3,"names":["useRef","useEffect","Renderer","Program","Triangle","Mesh","jsx","_jsx","RippleGrid","_ref","enableRainbow","gridColor","rippleIntensity","gridSize","gridThickness","fadeDistance","vignetteStrength","glowIntensity","opacity","gridRotation","mouseInteraction","mouseInteractionRadius","containerRef","mousePositionRef","x","y","targetMouseRef","mouseInfluenceRef","uniformsRef","current","hexToRgb","hex","result","exec","parseInt","renderer","dpr","Math","min","window","devicePixelRatio","alpha","gl","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","canvas","style","width","height","appendChild","vert","frag","uniforms","iTime","value","iResolution","mousePosition","mouseInfluence","geometry","program","vertex","fragment","mesh","resize","clientWidth","w","clientHeight","h","setSize","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","handleMouseEnter","handleMouseLeave","addEventListener","render","t","lerpFactor","currentInfluence","targetInfluence","scene","requestAnimationFrame","_renderer$gl$getExten","_containerRef$current","removeEventListener","getExtension","loseContext","removeChild","ref","className"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/src/components/Backgrounds/RippleGrid/RippleGrid.jsx"],"sourcesContent":["import { useRef, useEffect } from \"react\";\nimport { Renderer, Program, Triangle, Mesh } from \"ogl\";\nimport \"./RippleGrid.css\";\n\nconst RippleGrid = ({\n  enableRainbow = false,\n  gridColor = \"#ffffff\",\n  rippleIntensity = 0.05,\n  gridSize = 10.0,\n  gridThickness = 15.0,\n  fadeDistance = 1.5,\n  vignetteStrength = 2.0,\n  glowIntensity = 0.1,\n  opacity = 1.0,\n  gridRotation = 0,\n  mouseInteraction = true,\n  mouseInteractionRadius = 1,\n}) => {\n  const containerRef = useRef(null);\n  const mousePositionRef = useRef({ x: 0.5, y: 0.5 });\n  const targetMouseRef = useRef({ x: 0.5, y: 0.5 });\n  const mouseInfluenceRef = useRef(0);\n  const uniformsRef = useRef(null);\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const hexToRgb = (hex) => {\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result\n        ? [\n          parseInt(result[1], 16) / 255,\n          parseInt(result[2], 16) / 255,\n          parseInt(result[3], 16) / 255,\n        ]\n        : [1, 1, 1];\n    };\n\n    const renderer = new Renderer({\n      dpr: Math.min(window.devicePixelRatio, 2),\n      alpha: true,\n    });\n    const gl = renderer.gl;\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.canvas.style.width = \"100%\";\n    gl.canvas.style.height = \"100%\";\n    containerRef.current.appendChild(gl.canvas);\n\n    const vert = `\nattribute vec2 position;\nvarying vec2 vUv;\nvoid main() {\n    vUv = position * 0.5 + 0.5;\n    gl_Position = vec4(position, 0.0, 1.0);\n}`;\n\n    const frag = `precision highp float;\nuniform float iTime;\nuniform vec2 iResolution;\nuniform bool enableRainbow;\nuniform vec3 gridColor;\nuniform float rippleIntensity;\nuniform float gridSize;\nuniform float gridThickness;\nuniform float fadeDistance;\nuniform float vignetteStrength;\nuniform float glowIntensity;\nuniform float opacity;\nuniform float gridRotation;\nuniform bool mouseInteraction;\nuniform vec2 mousePosition;\nuniform float mouseInfluence;\nuniform float mouseInteractionRadius;\nvarying vec2 vUv;\n\nfloat pi = 3.141592;\n\nmat2 rotate(float angle) {\n    float s = sin(angle);\n    float c = cos(angle);\n    return mat2(c, -s, s, c);\n}\n\nvoid main() {\n    vec2 uv = vUv * 2.0 - 1.0;\n    uv.x *= iResolution.x / iResolution.y;\n\n    if (gridRotation != 0.0) {\n        uv = rotate(gridRotation * pi / 180.0) * uv;\n    }\n\n    float dist = length(uv);\n    float func = sin(pi * (iTime - dist));\n    vec2 rippleUv = uv + uv * func * rippleIntensity;\n\n    if (mouseInteraction && mouseInfluence > 0.0) {\n        vec2 mouseUv = (mousePosition * 2.0 - 1.0);\n        mouseUv.x *= iResolution.x / iResolution.y;\n        float mouseDist = length(uv - mouseUv);\n        \n        float influence = mouseInfluence * exp(-mouseDist * mouseDist / (mouseInteractionRadius * mouseInteractionRadius));\n        \n        float mouseWave = sin(pi * (iTime * 2.0 - mouseDist * 3.0)) * influence;\n        rippleUv += normalize(uv - mouseUv) * mouseWave * rippleIntensity * 0.3;\n    }\n\n    vec2 a = sin(gridSize * 0.5 * pi * rippleUv - pi / 2.0);\n    vec2 b = abs(a);\n\n    float aaWidth = 0.5;\n    vec2 smoothB = vec2(\n        smoothstep(0.0, aaWidth, b.x),\n        smoothstep(0.0, aaWidth, b.y)\n    );\n\n    vec3 color = vec3(0.0);\n    color += exp(-gridThickness * smoothB.x * (0.8 + 0.5 * sin(pi * iTime)));\n    color += exp(-gridThickness * smoothB.y);\n    color += 0.5 * exp(-(gridThickness / 4.0) * sin(smoothB.x));\n    color += 0.5 * exp(-(gridThickness / 3.0) * smoothB.y);\n\n    if (glowIntensity > 0.0) {\n        color += glowIntensity * exp(-gridThickness * 0.5 * smoothB.x);\n        color += glowIntensity * exp(-gridThickness * 0.5 * smoothB.y);\n    }\n\n    float ddd = exp(-2.0 * clamp(pow(dist, fadeDistance), 0.0, 1.0));\n    \n    vec2 vignetteCoords = vUv - 0.5;\n    float vignetteDistance = length(vignetteCoords);\n    float vignette = 1.0 - pow(vignetteDistance * 2.0, vignetteStrength);\n    vignette = clamp(vignette, 0.0, 1.0);\n    \n    vec3 t;\n    if (enableRainbow) {\n        t = vec3(\n            uv.x * 0.5 + 0.5 * sin(iTime),\n            uv.y * 0.5 + 0.5 * cos(iTime),\n            pow(cos(iTime), 4.0)\n        ) + 0.5;\n    } else {\n        t = gridColor;\n    }\n\n    float finalFade = ddd * vignette;\n    float alpha = length(color) * finalFade * opacity;\n    gl_FragColor = vec4(color * t * finalFade * opacity, alpha);\n}`;\n\n    const uniforms = {\n      iTime: { value: 0 },\n      iResolution: { value: [1, 1] },\n      enableRainbow: { value: enableRainbow },\n      gridColor: { value: hexToRgb(gridColor) },\n      rippleIntensity: { value: rippleIntensity },\n      gridSize: { value: gridSize },\n      gridThickness: { value: gridThickness },\n      fadeDistance: { value: fadeDistance },\n      vignetteStrength: { value: vignetteStrength },\n      glowIntensity: { value: glowIntensity },\n      opacity: { value: opacity },\n      gridRotation: { value: gridRotation },\n      mouseInteraction: { value: mouseInteraction },\n      mousePosition: { value: [0.5, 0.5] },\n      mouseInfluence: { value: 0 },\n      mouseInteractionRadius: { value: mouseInteractionRadius },\n    };\n\n    uniformsRef.current = uniforms;\n\n    const geometry = new Triangle(gl);\n    const program = new Program(gl, { vertex: vert, fragment: frag, uniforms });\n    const mesh = new Mesh(gl, { geometry, program });\n\n    const resize = () => {\n      const { clientWidth: w, clientHeight: h } = containerRef.current;\n      renderer.setSize(w, h);\n      uniforms.iResolution.value = [w, h];\n    };\n\n    const handleMouseMove = (e) => {\n      if (!mouseInteraction || !containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const x = (e.clientX - rect.left) / rect.width;\n      const y = 1.0 - (e.clientY - rect.top) / rect.height; // Flip Y coordinate\n      targetMouseRef.current = { x, y };\n    };\n\n    const handleMouseEnter = () => {\n      if (!mouseInteraction) return;\n      mouseInfluenceRef.current = 1.0;\n    };\n\n    const handleMouseLeave = () => {\n      if (!mouseInteraction) return;\n      mouseInfluenceRef.current = 0.0;\n    };\n\n    window.addEventListener(\"resize\", resize);\n    if (mouseInteraction) {\n      containerRef.current.addEventListener(\"mousemove\", handleMouseMove);\n      containerRef.current.addEventListener(\"mouseenter\", handleMouseEnter);\n      containerRef.current.addEventListener(\"mouseleave\", handleMouseLeave);\n    }\n    resize();\n\n    const render = (t) => {\n      uniforms.iTime.value = t * 0.001;\n\n      const lerpFactor = 0.1;\n      mousePositionRef.current.x +=\n        (targetMouseRef.current.x - mousePositionRef.current.x) * lerpFactor;\n      mousePositionRef.current.y +=\n        (targetMouseRef.current.y - mousePositionRef.current.y) * lerpFactor;\n\n      const currentInfluence = uniforms.mouseInfluence.value;\n      const targetInfluence = mouseInfluenceRef.current;\n      uniforms.mouseInfluence.value +=\n        (targetInfluence - currentInfluence) * 0.05;\n\n      uniforms.mousePosition.value = [\n        mousePositionRef.current.x,\n        mousePositionRef.current.y,\n      ];\n\n      renderer.render({ scene: mesh });\n      requestAnimationFrame(render);\n    };\n\n    requestAnimationFrame(render);\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n      if (mouseInteraction && containerRef.current) {\n        containerRef.current.removeEventListener(\"mousemove\", handleMouseMove);\n        containerRef.current.removeEventListener(\n          \"mouseenter\",\n          handleMouseEnter\n        );\n        containerRef.current.removeEventListener(\n          \"mouseleave\",\n          handleMouseLeave\n        );\n      }\n      renderer.gl.getExtension(\"WEBGL_lose_context\")?.loseContext();\n      containerRef.current?.removeChild(gl.canvas);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!uniformsRef.current) return;\n\n    const hexToRgb = (hex) => {\n      const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n      return result\n        ? [\n          parseInt(result[1], 16) / 255,\n          parseInt(result[2], 16) / 255,\n          parseInt(result[3], 16) / 255,\n        ]\n        : [1, 1, 1];\n    };\n\n    uniformsRef.current.enableRainbow.value = enableRainbow;\n    uniformsRef.current.gridColor.value = hexToRgb(gridColor);\n    uniformsRef.current.rippleIntensity.value = rippleIntensity;\n    uniformsRef.current.gridSize.value = gridSize;\n    uniformsRef.current.gridThickness.value = gridThickness;\n    uniformsRef.current.fadeDistance.value = fadeDistance;\n    uniformsRef.current.vignetteStrength.value = vignetteStrength;\n    uniformsRef.current.glowIntensity.value = glowIntensity;\n    uniformsRef.current.opacity.value = opacity;\n    uniformsRef.current.gridRotation.value = gridRotation;\n    uniformsRef.current.mouseInteraction.value = mouseInteraction;\n    uniformsRef.current.mouseInteractionRadius.value = mouseInteractionRadius;\n  }, [\n    enableRainbow,\n    gridColor,\n    rippleIntensity,\n    gridSize,\n    gridThickness,\n    fadeDistance,\n    vignetteStrength,\n    glowIntensity,\n    opacity,\n    gridRotation,\n    mouseInteraction,\n    mouseInteractionRadius,\n  ]);\n\n  return <div ref={containerRef} className=\"ripple-grid-container\" />;\n};\n\nexport default RippleGrid;\n"],"mappings":"AAAA,OAASA,MAAM,CAAEC,SAAS,KAAQ,OAAO,CACzC,OAASC,QAAQ,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,IAAI,KAAQ,KAAK,CACvD,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAab,IAbc,CAClBC,aAAa,CAAG,KAAK,CACrBC,SAAS,CAAG,SAAS,CACrBC,eAAe,CAAG,IAAI,CACtBC,QAAQ,CAAG,IAAI,CACfC,aAAa,CAAG,IAAI,CACpBC,YAAY,CAAG,GAAG,CAClBC,gBAAgB,CAAG,GAAG,CACtBC,aAAa,CAAG,GAAG,CACnBC,OAAO,CAAG,GAAG,CACbC,YAAY,CAAG,CAAC,CAChBC,gBAAgB,CAAG,IAAI,CACvBC,sBAAsB,CAAG,CAC3B,CAAC,CAAAZ,IAAA,CACC,KAAM,CAAAa,YAAY,CAAGtB,MAAM,CAAC,IAAI,CAAC,CACjC,KAAM,CAAAuB,gBAAgB,CAAGvB,MAAM,CAAC,CAAEwB,CAAC,CAAE,GAAG,CAAEC,CAAC,CAAE,GAAI,CAAC,CAAC,CACnD,KAAM,CAAAC,cAAc,CAAG1B,MAAM,CAAC,CAAEwB,CAAC,CAAE,GAAG,CAAEC,CAAC,CAAE,GAAI,CAAC,CAAC,CACjD,KAAM,CAAAE,iBAAiB,CAAG3B,MAAM,CAAC,CAAC,CAAC,CACnC,KAAM,CAAA4B,WAAW,CAAG5B,MAAM,CAAC,IAAI,CAAC,CAEhCC,SAAS,CAAC,IAAM,CACd,GAAI,CAACqB,YAAY,CAACO,OAAO,CAAE,OAE3B,KAAM,CAAAC,QAAQ,CAAIC,GAAG,EAAK,CACxB,KAAM,CAAAC,MAAM,CAAG,2CAA2C,CAACC,IAAI,CAACF,GAAG,CAAC,CACpE,MAAO,CAAAC,MAAM,CACT,CACAE,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,GAAG,CAC7BE,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,GAAG,CAC7BE,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,GAAG,CAC9B,CACC,CAAC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CACf,CAAC,CAED,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAjC,QAAQ,CAAC,CAC5BkC,GAAG,CAAEC,IAAI,CAACC,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAAE,CAAC,CAAC,CACzCC,KAAK,CAAE,IACT,CAAC,CAAC,CACF,KAAM,CAAAC,EAAE,CAAGP,QAAQ,CAACO,EAAE,CACtBA,EAAE,CAACC,MAAM,CAACD,EAAE,CAACE,KAAK,CAAC,CACnBF,EAAE,CAACG,SAAS,CAACH,EAAE,CAACI,SAAS,CAAEJ,EAAE,CAACK,mBAAmB,CAAC,CAClDL,EAAE,CAACM,MAAM,CAACC,KAAK,CAACC,KAAK,CAAG,MAAM,CAC9BR,EAAE,CAACM,MAAM,CAACC,KAAK,CAACE,MAAM,CAAG,MAAM,CAC/B7B,YAAY,CAACO,OAAO,CAACuB,WAAW,CAACV,EAAE,CAACM,MAAM,CAAC,CAE3C,KAAM,CAAAK,IAAI,CAAG;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,CAEE,KAAM,CAAAC,IAAI,CAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,CAEE,KAAM,CAAAC,QAAQ,CAAG,CACfC,KAAK,CAAE,CAAEC,KAAK,CAAE,CAAE,CAAC,CACnBC,WAAW,CAAE,CAAED,KAAK,CAAE,CAAC,CAAC,CAAE,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}