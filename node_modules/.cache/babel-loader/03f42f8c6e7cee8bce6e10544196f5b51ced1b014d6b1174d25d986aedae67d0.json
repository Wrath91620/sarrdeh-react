{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarrdeh Tech\\\\Desktop\\\\Sarrdeh-React\\\\sarrdeh-react\\\\src\\\\components\\\\TextAnimations\\\\BlurText\\\\BlurText.jsx\",\n  _s = $RefreshSig$();\nimport { motion } from 'framer-motion';\nimport { useEffect, useRef, useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buildKeyframes = (from, steps) => {\n  const keys = new Set([...Object.keys(from), ...steps.flatMap(s => Object.keys(s))]);\n  const keyframes = {};\n  keys.forEach(k => {\n    keyframes[k] = [from[k], ...steps.map(s => s[k])];\n  });\n  return keyframes;\n};\nconst BlurText = ({\n  text = '',\n  delay = 200,\n  className = '',\n  animateBy = 'words',\n  direction = 'top',\n  threshold = 0.1,\n  rootMargin = '0px',\n  animationFrom,\n  animationTo,\n  easing = t => t,\n  onAnimationComplete,\n  stepDuration = 0.35,\n  highlightWords = []\n}) => {\n  _s();\n  const elements = animateBy === 'words' ? text.split(' ') : text.split('');\n  const [inView, setInView] = useState(false);\n  const ref = useRef(null);\n  useEffect(() => {\n    if (!ref.current) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setInView(true);\n        observer.unobserve(ref.current);\n      }\n    }, {\n      threshold,\n      rootMargin\n    });\n    observer.observe(ref.current);\n    return () => observer.disconnect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [threshold, rootMargin]);\n  const defaultFrom = useMemo(() => direction === 'top' ? {\n    filter: 'blur(10px)',\n    opacity: 0,\n    y: -50\n  } : {\n    filter: 'blur(10px)',\n    opacity: 0,\n    y: 50\n  }, [direction]);\n  const defaultTo = useMemo(() => [{\n    filter: 'blur(5px)',\n    opacity: 0.5,\n    y: direction === 'top' ? 5 : -5\n  }, {\n    filter: 'blur(0px)',\n    opacity: 1,\n    y: 0\n  }], [direction]);\n  const fromSnapshot = animationFrom !== null && animationFrom !== void 0 ? animationFrom : defaultFrom;\n  const toSnapshots = animationTo !== null && animationTo !== void 0 ? animationTo : defaultTo;\n  const stepCount = toSnapshots.length + 1;\n  const totalDuration = stepDuration * (stepCount - 1);\n  const times = Array.from({\n    length: stepCount\n  }, (_, i) => stepCount === 1 ? 0 : i / (stepCount - 1));\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    ref: ref,\n    className: className,\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    children: elements.map((segment, index) => {\n      const animateKeyframes = buildKeyframes(fromSnapshot, toSnapshots);\n      const spanTransition = {\n        duration: totalDuration,\n        times,\n        delay: index * delay / 1000\n      };\n      spanTransition.ease = easing;\n      const isHighlighted = highlightWords.some(word => segment.toLowerCase().includes(word.toLowerCase()));\n      return /*#__PURE__*/_jsxDEV(motion.span, {\n        className: `inline-block will-change-[transform,filter,opacity] ${isHighlighted ? 'sarrdehTech' : ''}`,\n        initial: fromSnapshot,\n        animate: inView ? animateKeyframes : fromSnapshot,\n        transition: spanTransition,\n        onAnimationComplete: index === elements.length - 1 ? onAnimationComplete : undefined,\n        children: [segment === ' ' ? '\\u00A0' : segment, animateBy === 'words' && index < elements.length - 1 && '\\u00A0']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(BlurText, \"IxnOfDOifNR2DM+0TATKkPR86iM=\");\n_c = BlurText;\nexport default BlurText;\nvar _c;\n$RefreshReg$(_c, \"BlurText\");","map":{"version":3,"names":["motion","useEffect","useRef","useState","useMemo","jsxDEV","_jsxDEV","buildKeyframes","from","steps","keys","Set","Object","flatMap","s","keyframes","forEach","k","map","BlurText","text","delay","className","animateBy","direction","threshold","rootMargin","animationFrom","animationTo","easing","t","onAnimationComplete","stepDuration","highlightWords","_s","elements","split","inView","setInView","ref","current","observer","IntersectionObserver","entry","isIntersecting","unobserve","observe","disconnect","defaultFrom","filter","opacity","y","defaultTo","fromSnapshot","toSnapshots","stepCount","length","totalDuration","times","Array","_","i","style","display","flexWrap","children","segment","index","animateKeyframes","spanTransition","duration","ease","isHighlighted","some","word","toLowerCase","includes","span","initial","animate","transition","undefined","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/src/components/TextAnimations/BlurText/BlurText.jsx"],"sourcesContent":["import { motion } from 'framer-motion';\r\nimport { useEffect, useRef, useState, useMemo } from 'react';\r\n\r\nconst buildKeyframes = (from, steps) => {\r\n  const keys = new Set([\r\n    ...Object.keys(from),\r\n    ...steps.flatMap((s) => Object.keys(s)),\r\n  ]);\r\n\r\n  const keyframes = {};\r\n  keys.forEach((k) => {\r\n    keyframes[k] = [from[k], ...steps.map((s) => s[k])];\r\n  });\r\n  return keyframes;\r\n};\r\n\r\nconst BlurText = ({\r\n  text = '',\r\n  delay = 200,\r\n  className = '',\r\n  animateBy = 'words',\r\n  direction = 'top',\r\n  threshold = 0.1,\r\n  rootMargin = '0px',\r\n  animationFrom,\r\n  animationTo,\r\n  easing = (t) => t,\r\n  onAnimationComplete,\r\n  stepDuration = 0.35,\r\n  highlightWords = [],\r\n}) => {\r\n  const elements = animateBy === 'words' ? text.split(' ') : text.split('');\r\n  const [inView, setInView] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setInView(true);\r\n          observer.unobserve(ref.current);\r\n        }\r\n      },\r\n      { threshold, rootMargin }\r\n    );\r\n    observer.observe(ref.current);\r\n    return () => observer.disconnect();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [threshold, rootMargin]);\r\n\r\n  const defaultFrom = useMemo(\r\n    () =>\r\n      direction === 'top'\r\n        ? { filter: 'blur(10px)', opacity: 0, y: -50 }\r\n        : { filter: 'blur(10px)', opacity: 0, y: 50 },\r\n    [direction]\r\n  );\r\n\r\n  const defaultTo = useMemo(\r\n    () => [\r\n      {\r\n        filter: 'blur(5px)',\r\n        opacity: 0.5,\r\n        y: direction === 'top' ? 5 : -5,\r\n      },\r\n      { filter: 'blur(0px)', opacity: 1, y: 0 },\r\n    ],\r\n    [direction]\r\n  );\r\n\r\n  const fromSnapshot = animationFrom ?? defaultFrom;\r\n  const toSnapshots = animationTo ?? defaultTo;\r\n\r\n  const stepCount = toSnapshots.length + 1;\r\n  const totalDuration = stepDuration * (stepCount - 1);\r\n  const times = Array.from({ length: stepCount }, (_, i) =>\r\n    stepCount === 1 ? 0 : i / (stepCount - 1)\r\n  );\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      className={className}\r\n      style={{ display: 'flex', flexWrap: 'wrap' }}\r\n    >\r\n      {elements.map((segment, index) => {\r\n        const animateKeyframes = buildKeyframes(fromSnapshot, toSnapshots);\r\n\r\n        const spanTransition = {\r\n          duration: totalDuration,\r\n          times,\r\n          delay: (index * delay) / 1000,\r\n        };\r\n        (spanTransition).ease = easing;\r\n\r\n        const isHighlighted = highlightWords.some(word => \r\n          segment.toLowerCase().includes(word.toLowerCase())\r\n        );\r\n        \r\n        return (\r\n          <motion.span\r\n            className={`inline-block will-change-[transform,filter,opacity] ${isHighlighted ? 'sarrdehTech' : ''}`}\r\n            key={index}\r\n            initial={fromSnapshot}\r\n            animate={inView ? animateKeyframes : fromSnapshot}\r\n            transition={spanTransition}\r\n            onAnimationComplete={\r\n              index === elements.length - 1 ? onAnimationComplete : undefined\r\n            }\r\n          >\r\n            {segment === ' ' ? '\\u00A0' : segment}\r\n            {animateBy === 'words' && index < elements.length - 1 && '\\u00A0'}\r\n          </motion.span>\r\n        );\r\n      })}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default BlurText;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,cAAc,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EACtC,MAAMC,IAAI,GAAG,IAAIC,GAAG,CAAC,CACnB,GAAGC,MAAM,CAACF,IAAI,CAACF,IAAI,CAAC,EACpB,GAAGC,KAAK,CAACI,OAAO,CAAEC,CAAC,IAAKF,MAAM,CAACF,IAAI,CAACI,CAAC,CAAC,CAAC,CACxC,CAAC;EAEF,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpBL,IAAI,CAACM,OAAO,CAAEC,CAAC,IAAK;IAClBF,SAAS,CAACE,CAAC,CAAC,GAAG,CAACT,IAAI,CAACS,CAAC,CAAC,EAAE,GAAGR,KAAK,CAACS,GAAG,CAAEJ,CAAC,IAAKA,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC,CAAC;EACF,OAAOF,SAAS;AAClB,CAAC;AAED,MAAMI,QAAQ,GAAGA,CAAC;EAChBC,IAAI,GAAG,EAAE;EACTC,KAAK,GAAG,GAAG;EACXC,SAAS,GAAG,EAAE;EACdC,SAAS,GAAG,OAAO;EACnBC,SAAS,GAAG,KAAK;EACjBC,SAAS,GAAG,GAAG;EACfC,UAAU,GAAG,KAAK;EAClBC,aAAa;EACbC,WAAW;EACXC,MAAM,GAAIC,CAAC,IAAKA,CAAC;EACjBC,mBAAmB;EACnBC,YAAY,GAAG,IAAI;EACnBC,cAAc,GAAG;AACnB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGZ,SAAS,KAAK,OAAO,GAAGH,IAAI,CAACgB,KAAK,CAAC,GAAG,CAAC,GAAGhB,IAAI,CAACgB,KAAK,CAAC,EAAE,CAAC;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMoC,GAAG,GAAGrC,MAAM,CAAC,IAAI,CAAC;EAExBD,SAAS,CAAC,MAAM;IACd,IAAI,CAACsC,GAAG,CAACC,OAAO,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX,IAAIA,KAAK,CAACC,cAAc,EAAE;QACxBN,SAAS,CAAC,IAAI,CAAC;QACfG,QAAQ,CAACI,SAAS,CAACN,GAAG,CAACC,OAAO,CAAC;MACjC;IACF,CAAC,EACD;MAAEf,SAAS;MAAEC;IAAW,CAC1B,CAAC;IACDe,QAAQ,CAACK,OAAO,CAACP,GAAG,CAACC,OAAO,CAAC;IAC7B,OAAO,MAAMC,QAAQ,CAACM,UAAU,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,CAACtB,SAAS,EAAEC,UAAU,CAAC,CAAC;EAE3B,MAAMsB,WAAW,GAAG5C,OAAO,CACzB,MACEoB,SAAS,KAAK,KAAK,GACf;IAAEyB,MAAM,EAAE,YAAY;IAAEC,OAAO,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;EAAG,CAAC,GAC5C;IAAEF,MAAM,EAAE,YAAY;IAAEC,OAAO,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAG,CAAC,EACjD,CAAC3B,SAAS,CACZ,CAAC;EAED,MAAM4B,SAAS,GAAGhD,OAAO,CACvB,MAAM,CACJ;IACE6C,MAAM,EAAE,WAAW;IACnBC,OAAO,EAAE,GAAG;IACZC,CAAC,EAAE3B,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC;EAChC,CAAC,EACD;IAAEyB,MAAM,EAAE,WAAW;IAAEC,OAAO,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAC1C,EACD,CAAC3B,SAAS,CACZ,CAAC;EAED,MAAM6B,YAAY,GAAG1B,aAAa,aAAbA,aAAa,cAAbA,aAAa,GAAIqB,WAAW;EACjD,MAAMM,WAAW,GAAG1B,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAIwB,SAAS;EAE5C,MAAMG,SAAS,GAAGD,WAAW,CAACE,MAAM,GAAG,CAAC;EACxC,MAAMC,aAAa,GAAGzB,YAAY,IAAIuB,SAAS,GAAG,CAAC,CAAC;EACpD,MAAMG,KAAK,GAAGC,KAAK,CAACnD,IAAI,CAAC;IAAEgD,MAAM,EAAED;EAAU,CAAC,EAAE,CAACK,CAAC,EAAEC,CAAC,KACnDN,SAAS,KAAK,CAAC,GAAG,CAAC,GAAGM,CAAC,IAAIN,SAAS,GAAG,CAAC,CAC1C,CAAC;EAED,oBACEjD,OAAA;IACEiC,GAAG,EAAEA,GAAI;IACTjB,SAAS,EAAEA,SAAU;IACrBwC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAAAC,QAAA,EAE5C9B,QAAQ,CAACjB,GAAG,CAAC,CAACgD,OAAO,EAAEC,KAAK,KAAK;MAChC,MAAMC,gBAAgB,GAAG7D,cAAc,CAAC8C,YAAY,EAAEC,WAAW,CAAC;MAElE,MAAMe,cAAc,GAAG;QACrBC,QAAQ,EAAEb,aAAa;QACvBC,KAAK;QACLrC,KAAK,EAAG8C,KAAK,GAAG9C,KAAK,GAAI;MAC3B,CAAC;MACAgD,cAAc,CAAEE,IAAI,GAAG1C,MAAM;MAE9B,MAAM2C,aAAa,GAAGvC,cAAc,CAACwC,IAAI,CAACC,IAAI,IAC5CR,OAAO,CAACS,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAACC,WAAW,CAAC,CAAC,CACnD,CAAC;MAED,oBACErE,OAAA,CAACN,MAAM,CAAC6E,IAAI;QACVvD,SAAS,EAAE,uDAAuDkD,aAAa,GAAG,aAAa,GAAG,EAAE,EAAG;QAEvGM,OAAO,EAAEzB,YAAa;QACtB0B,OAAO,EAAE1C,MAAM,GAAG+B,gBAAgB,GAAGf,YAAa;QAClD2B,UAAU,EAAEX,cAAe;QAC3BtC,mBAAmB,EACjBoC,KAAK,KAAKhC,QAAQ,CAACqB,MAAM,GAAG,CAAC,GAAGzB,mBAAmB,GAAGkD,SACvD;QAAAhB,QAAA,GAEAC,OAAO,KAAK,GAAG,GAAG,QAAQ,GAAGA,OAAO,EACpC3C,SAAS,KAAK,OAAO,IAAI4C,KAAK,GAAGhC,QAAQ,CAACqB,MAAM,GAAG,CAAC,IAAI,QAAQ;MAAA,GAT5DW,KAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUC,CAAC;IAElB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAER,CAAC;AAACnD,EAAA,CAtGIf,QAAQ;AAAAmE,EAAA,GAARnE,QAAQ;AAwGd,eAAeA,QAAQ;AAAC,IAAAmE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}