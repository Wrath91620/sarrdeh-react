{"ast":null,"code":"import{useEffect,useRef}from\"react\";import*as OGL from\"ogl\";import{jsx as _jsx}from\"react/jsx-runtime\";const defaultColors=[\"#ffffff\",\"#ffffff\",\"#ffffff\"];const hexToRgb=hex=>{hex=hex.replace(/^#/,\"\");if(hex.length===3){hex=hex.split(\"\").map(c=>c+c).join(\"\");}const int=parseInt(hex,16);const r=(int>>16&255)/255;const g=(int>>8&255)/255;const b=(int&255)/255;return[r,g,b];};const vertex=/* glsl */`\n  attribute vec3 position;\n  attribute vec4 random;\n  attribute vec3 color;\n  \n  uniform mat4 modelMatrix;\n  uniform mat4 viewMatrix;\n  uniform mat4 projectionMatrix;\n  uniform float uTime;\n  uniform float uSpread;\n  uniform float uBaseSize;\n  uniform float uSizeRandomness;\n  \n  varying vec4 vRandom;\n  varying vec3 vColor;\n  varying vec3 vPosition;\n  \n  void main() {\n    vRandom = random;\n    vColor = color;\n    \n    vec3 pos = position * uSpread;\n    pos.z *= 10.0;\n    \n    vec4 mPos = modelMatrix * vec4(pos, 1.0);\n    float t = uTime;\n    mPos.x += sin(t * random.z + 6.28 * random.w) * mix(0.1, 1.5, random.x);\n    mPos.y += sin(t * random.y + 6.28 * random.x) * mix(0.1, 1.5, random.w);\n    mPos.z += sin(t * random.w + 6.28 * random.y) * mix(0.1, 1.5, random.z);\n    \n    vPosition = mPos.xyz;\n    vec4 mvPos = viewMatrix * mPos;\n    gl_PointSize = (uBaseSize * (1.0 + uSizeRandomness * (random.x - 0.5))) / length(mvPos.xyz);\n    gl_Position = projectionMatrix * mvPos;\n  }\n`;const fragment=/* glsl */`\n  precision highp float;\n  \n  uniform float uTime;\n  uniform float uAlphaParticles;\n  uniform vec2 uResolution;\n  varying vec4 vRandom;\n  varying vec3 vColor;\n  varying vec3 vPosition;\n  \n  void main() {\n    vec2 uv = gl_PointCoord.xy;\n    float d = length(uv - vec2(0.5));\n    \n    // Calculate distance from center for fade effect\n    vec2 screenPos = gl_FragCoord.xy / uResolution.xy;\n    float distanceFromCenter = length(screenPos - vec2(0.5));\n    float fadeFactor = 1.0 - smoothstep(0.3, 0.8, distanceFromCenter);\n    \n    if(uAlphaParticles < 0.5) {\n      if(d > 0.5) {\n        discard;\n      }\n      gl_FragColor = vec4(vColor + 0.2 * sin(uv.yxx + uTime + vRandom.y * 6.28), fadeFactor);\n    } else {\n      float circle = smoothstep(0.5, 0.4, d) * 0.8;\n      gl_FragColor = vec4(vColor + 0.2 * sin(uv.yxx + uTime + vRandom.y * 6.28), circle * fadeFactor);\n    }\n  }\n`;const Particles=_ref=>{let{particleCount=200,particleSpread=10,speed=0.1,particleColors,moveParticlesOnHover=false,particleHoverFactor=1,alphaParticles=false,particleBaseSize=100,sizeRandomness=1,cameraDistance=20,disableRotation=false,className}=_ref;const containerRef=useRef(null);const mouseRef=useRef({x:0,y:0});useEffect(()=>{const container=containerRef.current;if(!container)return;const renderer=new OGL.Renderer({depth:false,alpha:true});const gl=renderer.gl;container.appendChild(gl.canvas);gl.clearColor(0,0,0,0);const camera=new OGL.Camera(gl,{fov:15});camera.position.set(0,0,cameraDistance);const count=particleCount;const positions=new Float32Array(count*3);const randoms=new Float32Array(count*4);const colors=new Float32Array(count*3);const palette=particleColors&&particleColors.length>0?particleColors:defaultColors;for(let i=0;i<count;i++){let x,y,z,len;do{x=Math.random()*2-1;y=Math.random()*2-1;z=Math.random()*2-1;len=x*x+y*y+z*z;}while(len>1||len===0);const r=Math.cbrt(Math.random());positions.set([x*r,y*r,z*r],i*3);randoms.set([Math.random(),Math.random(),Math.random(),Math.random()],i*4);const col=hexToRgb(palette[Math.floor(Math.random()*palette.length)]);colors.set(col,i*3);}const geometry=new OGL.Geometry(gl,{position:{size:3,data:positions},random:{size:4,data:randoms},color:{size:3,data:colors}});const program=new OGL.Program(gl,{vertex,fragment,uniforms:{uTime:{value:0},uSpread:{value:particleSpread},uBaseSize:{value:particleBaseSize},uSizeRandomness:{value:sizeRandomness},uAlphaParticles:{value:alphaParticles?1:0},uResolution:{value:[gl.canvas.width,gl.canvas.height]}},transparent:true,depthTest:false});const resize=()=>{const width=container.clientWidth;const height=container.clientHeight;renderer.setSize(width,height);camera.perspective({aspect:gl.canvas.width/gl.canvas.height});program.uniforms.uResolution.value=[gl.canvas.width,gl.canvas.height];};window.addEventListener(\"resize\",resize,false);resize();const handleMouseMove=e=>{const rect=container.getBoundingClientRect();const x=(e.clientX-rect.left)/rect.width*2-1;const y=-((e.clientY-rect.top)/rect.height*2-1);mouseRef.current={x,y};};if(moveParticlesOnHover){container.addEventListener(\"mousemove\",handleMouseMove);}const particles=new OGL.Mesh(gl,{mode:gl.POINTS,geometry,program});let animationFrameId;let lastTime=performance.now();let elapsed=0;const update=t=>{animationFrameId=requestAnimationFrame(update);const delta=t-lastTime;lastTime=t;elapsed+=delta*speed;program.uniforms.uTime.value=elapsed*0.001;if(moveParticlesOnHover){particles.position.x=-mouseRef.current.x*particleHoverFactor;particles.position.y=-mouseRef.current.y*particleHoverFactor;}else{particles.position.x=0;particles.position.y=0;}if(!disableRotation){particles.rotation.x=Math.sin(elapsed*0.0002)*0.1;particles.rotation.y=Math.cos(elapsed*0.0005)*0.15;particles.rotation.z+=0.01*speed;}renderer.render({scene:particles,camera});};animationFrameId=requestAnimationFrame(update);return()=>{window.removeEventListener(\"resize\",resize);if(moveParticlesOnHover){container.removeEventListener(\"mousemove\",handleMouseMove);}cancelAnimationFrame(animationFrameId);if(container.contains(gl.canvas)){container.removeChild(gl.canvas);}};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[particleCount,particleSpread,speed,moveParticlesOnHover,particleHoverFactor,alphaParticles,particleBaseSize,sizeRandomness,cameraDistance,disableRotation]);return/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:`particles-container ${className}`});};export default Particles;","map":{"version":3,"names":["useEffect","useRef","OGL","jsx","_jsx","defaultColors","hexToRgb","hex","replace","length","split","map","c","join","int","parseInt","r","g","b","vertex","fragment","Particles","_ref","particleCount","particleSpread","speed","particleColors","moveParticlesOnHover","particleHoverFactor","alphaParticles","particleBaseSize","sizeRandomness","cameraDistance","disableRotation","className","containerRef","mouseRef","x","y","container","current","renderer","Renderer","depth","alpha","gl","appendChild","canvas","clearColor","camera","Camera","fov","position","set","count","positions","Float32Array","randoms","colors","palette","i","z","len","Math","random","cbrt","col","floor","geometry","Geometry","size","data","color","program","Program","uniforms","uTime","value","uSpread","uBaseSize","uSizeRandomness","uAlphaParticles","uResolution","width","height","transparent","depthTest","resize","clientWidth","clientHeight","setSize","perspective","aspect","window","addEventListener","handleMouseMove","e","rect","getBoundingClientRect","clientX","left","clientY","top","particles","Mesh","mode","POINTS","animationFrameId","lastTime","performance","now","elapsed","update","t","requestAnimationFrame","delta","rotation","sin","cos","render","scene","removeEventListener","cancelAnimationFrame","contains","removeChild","ref"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/src/components/Particles.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport * as OGL from \"ogl\";\r\n\r\n\r\n\r\nconst defaultColors = [\"#ffffff\", \"#ffffff\", \"#ffffff\"];\r\n\r\nconst hexToRgb = (hex) => {\r\n  hex = hex.replace(/^#/, \"\");\r\n  if (hex.length === 3) {\r\n    hex = hex.split(\"\").map((c) => c + c).join(\"\");\r\n  }\r\n  const int = parseInt(hex, 16);\r\n  const r = ((int >> 16) & 255) / 255;\r\n  const g = ((int >> 8) & 255) / 255;\r\n  const b = (int & 255) / 255;\r\n  return [r, g, b];\r\n};\r\n\r\nconst vertex = /* glsl */ `\r\n  attribute vec3 position;\r\n  attribute vec4 random;\r\n  attribute vec3 color;\r\n  \r\n  uniform mat4 modelMatrix;\r\n  uniform mat4 viewMatrix;\r\n  uniform mat4 projectionMatrix;\r\n  uniform float uTime;\r\n  uniform float uSpread;\r\n  uniform float uBaseSize;\r\n  uniform float uSizeRandomness;\r\n  \r\n  varying vec4 vRandom;\r\n  varying vec3 vColor;\r\n  varying vec3 vPosition;\r\n  \r\n  void main() {\r\n    vRandom = random;\r\n    vColor = color;\r\n    \r\n    vec3 pos = position * uSpread;\r\n    pos.z *= 10.0;\r\n    \r\n    vec4 mPos = modelMatrix * vec4(pos, 1.0);\r\n    float t = uTime;\r\n    mPos.x += sin(t * random.z + 6.28 * random.w) * mix(0.1, 1.5, random.x);\r\n    mPos.y += sin(t * random.y + 6.28 * random.x) * mix(0.1, 1.5, random.w);\r\n    mPos.z += sin(t * random.w + 6.28 * random.y) * mix(0.1, 1.5, random.z);\r\n    \r\n    vPosition = mPos.xyz;\r\n    vec4 mvPos = viewMatrix * mPos;\r\n    gl_PointSize = (uBaseSize * (1.0 + uSizeRandomness * (random.x - 0.5))) / length(mvPos.xyz);\r\n    gl_Position = projectionMatrix * mvPos;\r\n  }\r\n`;\r\n\r\nconst fragment = /* glsl */ `\r\n  precision highp float;\r\n  \r\n  uniform float uTime;\r\n  uniform float uAlphaParticles;\r\n  uniform vec2 uResolution;\r\n  varying vec4 vRandom;\r\n  varying vec3 vColor;\r\n  varying vec3 vPosition;\r\n  \r\n  void main() {\r\n    vec2 uv = gl_PointCoord.xy;\r\n    float d = length(uv - vec2(0.5));\r\n    \r\n    // Calculate distance from center for fade effect\r\n    vec2 screenPos = gl_FragCoord.xy / uResolution.xy;\r\n    float distanceFromCenter = length(screenPos - vec2(0.5));\r\n    float fadeFactor = 1.0 - smoothstep(0.3, 0.8, distanceFromCenter);\r\n    \r\n    if(uAlphaParticles < 0.5) {\r\n      if(d > 0.5) {\r\n        discard;\r\n      }\r\n      gl_FragColor = vec4(vColor + 0.2 * sin(uv.yxx + uTime + vRandom.y * 6.28), fadeFactor);\r\n    } else {\r\n      float circle = smoothstep(0.5, 0.4, d) * 0.8;\r\n      gl_FragColor = vec4(vColor + 0.2 * sin(uv.yxx + uTime + vRandom.y * 6.28), circle * fadeFactor);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Particles = ({\r\n  particleCount = 200,\r\n  particleSpread = 10,\r\n  speed = 0.1,\r\n  particleColors,\r\n  moveParticlesOnHover = false,\r\n  particleHoverFactor = 1,\r\n  alphaParticles = false,\r\n  particleBaseSize = 100,\r\n  sizeRandomness = 1,\r\n  cameraDistance = 20,\r\n  disableRotation = false,\r\n  className,\r\n}) => {\r\n  const containerRef = useRef(null);\r\n  const mouseRef = useRef({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n    if (!container) return;\r\n\r\n    const renderer = new OGL.Renderer({ depth: false, alpha: true });\r\n    const gl = renderer.gl;\r\n    container.appendChild(gl.canvas);\r\n    gl.clearColor(0, 0, 0, 0);\r\n\r\n    const camera = new OGL.Camera(gl, { fov: 15 });\r\n    camera.position.set(0, 0, cameraDistance);\r\n\r\n    const count = particleCount;\r\n    const positions = new Float32Array(count * 3);\r\n    const randoms = new Float32Array(count * 4);\r\n    const colors = new Float32Array(count * 3);\r\n    const palette = particleColors && particleColors.length > 0 ? particleColors : defaultColors;\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      let x, y, z, len;\r\n      do {\r\n        x = Math.random() * 2 - 1;\r\n        y = Math.random() * 2 - 1;\r\n        z = Math.random() * 2 - 1;\r\n        len = x * x + y * y + z * z;\r\n      } while (len > 1 || len === 0);\r\n      const r = Math.cbrt(Math.random());\r\n      positions.set([x * r, y * r, z * r], i * 3);\r\n      randoms.set([Math.random(), Math.random(), Math.random(), Math.random()], i * 4);\r\n      const col = hexToRgb(palette[Math.floor(Math.random() * palette.length)]);\r\n      colors.set(col, i * 3);\r\n    }\r\n\r\n    const geometry = new OGL.Geometry(gl, {\r\n      position: { size: 3, data: positions },\r\n      random: { size: 4, data: randoms },\r\n      color: { size: 3, data: colors },\r\n    });\r\n\r\n    const program = new OGL.Program(gl, {\r\n      vertex,\r\n      fragment,\r\n      uniforms: {\r\n        uTime: { value: 0 },\r\n        uSpread: { value: particleSpread },\r\n        uBaseSize: { value: particleBaseSize },\r\n        uSizeRandomness: { value: sizeRandomness },\r\n        uAlphaParticles: { value: alphaParticles ? 1 : 0 },\r\n        uResolution: { value: [gl.canvas.width, gl.canvas.height] },\r\n      },\r\n      transparent: true,\r\n      depthTest: false,\r\n    });\r\n\r\n    const resize = () => {\r\n      const width = container.clientWidth;\r\n      const height = container.clientHeight;\r\n      renderer.setSize(width, height);\r\n      camera.perspective({ aspect: gl.canvas.width / gl.canvas.height });\r\n      program.uniforms.uResolution.value = [gl.canvas.width, gl.canvas.height];\r\n    };\r\n    window.addEventListener(\"resize\", resize, false);\r\n    resize();\r\n\r\n    const handleMouseMove = (e) => {\r\n      const rect = container.getBoundingClientRect();\r\n      const x = ((e.clientX - rect.left) / rect.width) * 2 - 1;\r\n      const y = -(((e.clientY - rect.top) / rect.height) * 2 - 1);\r\n      mouseRef.current = { x, y };\r\n    };\r\n\r\n    if (moveParticlesOnHover) {\r\n      container.addEventListener(\"mousemove\", handleMouseMove);\r\n    }\r\n\r\n    const particles = new OGL.Mesh(gl, { mode: gl.POINTS, geometry, program });\r\n\r\n    let animationFrameId;\r\n    let lastTime = performance.now();\r\n    let elapsed = 0;\r\n\r\n    const update = (t) => {\r\n      animationFrameId = requestAnimationFrame(update);\r\n      const delta = t - lastTime;\r\n      lastTime = t;\r\n      elapsed += delta * speed;\r\n\r\n      program.uniforms.uTime.value = elapsed * 0.001;\r\n\r\n      if (moveParticlesOnHover) {\r\n        particles.position.x = -mouseRef.current.x * particleHoverFactor;\r\n        particles.position.y = -mouseRef.current.y * particleHoverFactor;\r\n      } else {\r\n        particles.position.x = 0;\r\n        particles.position.y = 0;\r\n      }\r\n\r\n      if (!disableRotation) {\r\n        particles.rotation.x = Math.sin(elapsed * 0.0002) * 0.1;\r\n        particles.rotation.y = Math.cos(elapsed * 0.0005) * 0.15;\r\n        particles.rotation.z += 0.01 * speed;\r\n      }\r\n\r\n      renderer.render({ scene: particles, camera });\r\n    };\r\n\r\n    animationFrameId = requestAnimationFrame(update);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resize);\r\n      if (moveParticlesOnHover) {\r\n        container.removeEventListener(\"mousemove\", handleMouseMove);\r\n      }\r\n      cancelAnimationFrame(animationFrameId);\r\n      if (container.contains(gl.canvas)) {\r\n        container.removeChild(gl.canvas);\r\n      }\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    particleCount,\r\n    particleSpread,\r\n    speed,\r\n    moveParticlesOnHover,\r\n    particleHoverFactor,\r\n    alphaParticles,\r\n    particleBaseSize,\r\n    sizeRandomness,\r\n    cameraDistance,\r\n    disableRotation,\r\n  ]);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={`particles-container ${className}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Particles;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}