{"ast":null,"code":"import{useEffect,useState,useRef}from'react';import{motion}from'framer-motion';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const styles={wrapper:{display:'inline-block',whiteSpace:'pre-wrap'},srOnly:{position:'absolute',width:'1px',height:'1px',padding:0,margin:'-1px',overflow:'hidden',clip:'rect(0,0,0,0)',border:0}};export default function DecryptedText(_ref){let{text,speed=200,maxIterations=10,sequential=false,revealDirection='start',useOriginalCharsOnly=true,characters='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_+',className='',parentClassName='',encryptedClassName='',animateOn='hover',...props}=_ref;const[displayText,setDisplayText]=useState(text);const[isHovering,setIsHovering]=useState(false);const[isScrambling,setIsScrambling]=useState(false);const[revealedIndices,setRevealedIndices]=useState(new Set());const[hasAnimated,setHasAnimated]=useState(false);const containerRef=useRef(null);useEffect(()=>{let interval;let currentIteration=0;const getNextIndex=revealedSet=>{const textLength=text.length;switch(revealDirection){case'start':return revealedSet.size;case'end':return textLength-1-revealedSet.size;case'center':{const middle=Math.floor(textLength/2);const offset=Math.floor(revealedSet.size/2);const nextIndex=revealedSet.size%2===0?middle+offset:middle-offset-1;if(nextIndex>=0&&nextIndex<textLength&&!revealedSet.has(nextIndex)){return nextIndex;}for(let i=0;i<textLength;i++){if(!revealedSet.has(i))return i;}return 0;}default:return revealedSet.size;}};const availableChars=useOriginalCharsOnly?Array.from(new Set(text.split(''))).filter(char=>char!==' '):characters.split('');const shuffleText=(originalText,currentRevealed)=>{if(useOriginalCharsOnly){const positions=originalText.split('').map((char,i)=>({char,isSpace:char===' ',index:i,isRevealed:currentRevealed.has(i)}));const nonSpaceChars=positions.filter(p=>!p.isSpace&&!p.isRevealed).map(p=>p.char);for(let i=nonSpaceChars.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[nonSpaceChars[i],nonSpaceChars[j]]=[nonSpaceChars[j],nonSpaceChars[i]];}let charIndex=0;return positions.map(p=>{if(p.isSpace)return' ';if(p.isRevealed)return originalText[p.index];return nonSpaceChars[charIndex++];}).join('');}else{return originalText.split('').map((char,i)=>{if(char===' ')return' ';if(currentRevealed.has(i))return originalText[i];return availableChars[Math.floor(Math.random()*availableChars.length)];}).join('');}};if(isHovering){setIsScrambling(true);interval=setInterval(()=>{setRevealedIndices(prevRevealed=>{if(sequential){if(prevRevealed.size<text.length){const nextIndex=getNextIndex(prevRevealed);const newRevealed=new Set(prevRevealed);newRevealed.add(nextIndex);setDisplayText(shuffleText(text,newRevealed));return newRevealed;}else{clearInterval(interval);setIsScrambling(false);return prevRevealed;}}else{setDisplayText(shuffleText(text,prevRevealed));currentIteration++;if(currentIteration>=maxIterations){clearInterval(interval);setIsScrambling(false);setDisplayText(text);}return prevRevealed;}});},speed);}else{setDisplayText(text);setRevealedIndices(new Set());setIsScrambling(false);}return()=>{if(interval)clearInterval(interval);};},[isHovering,text,speed,maxIterations,sequential,revealDirection,characters,useOriginalCharsOnly]);useEffect(()=>{if(animateOn!=='view')return;const observerCallback=entries=>{entries.forEach(entry=>{if(entry.isIntersecting&&!hasAnimated){setIsHovering(true);setHasAnimated(true);}});};const observerOptions={root:null,rootMargin:'0px',threshold:0.1};const observer=new IntersectionObserver(observerCallback,observerOptions);const currentRef=containerRef.current;if(currentRef){observer.observe(currentRef);}return()=>{if(currentRef){observer.unobserve(currentRef);}};},[animateOn,hasAnimated]);const hoverProps=animateOn==='hover'?{onMouseEnter:()=>setIsHovering(true),onMouseLeave:()=>setIsHovering(false)}:{};return/*#__PURE__*/_jsxs(motion.span,{className:parentClassName,ref:containerRef,style:styles.wrapper,...hoverProps,...props,children:[/*#__PURE__*/_jsx(\"span\",{style:styles.srOnly,children:displayText}),/*#__PURE__*/_jsx(\"span\",{\"aria-hidden\":\"true\",children:displayText.split('').map((char,index)=>{const isRevealedOrDone=revealedIndices.has(index)||!isScrambling||!isHovering;return/*#__PURE__*/_jsx(\"span\",{className:isRevealedOrDone?className:encryptedClassName,children:char},index);})})]});}","map":{"version":3,"names":["useEffect","useState","useRef","motion","jsx","_jsx","jsxs","_jsxs","styles","wrapper","display","whiteSpace","srOnly","position","width","height","padding","margin","overflow","clip","border","DecryptedText","_ref","text","speed","maxIterations","sequential","revealDirection","useOriginalCharsOnly","characters","className","parentClassName","encryptedClassName","animateOn","props","displayText","setDisplayText","isHovering","setIsHovering","isScrambling","setIsScrambling","revealedIndices","setRevealedIndices","Set","hasAnimated","setHasAnimated","containerRef","interval","currentIteration","getNextIndex","revealedSet","textLength","length","size","middle","Math","floor","offset","nextIndex","has","i","availableChars","Array","from","split","filter","char","shuffleText","originalText","currentRevealed","positions","map","isSpace","index","isRevealed","nonSpaceChars","p","j","random","charIndex","join","setInterval","prevRevealed","newRevealed","add","clearInterval","observerCallback","entries","forEach","entry","isIntersecting","observerOptions","root","rootMargin","threshold","observer","IntersectionObserver","currentRef","current","observe","unobserve","hoverProps","onMouseEnter","onMouseLeave","span","ref","style","children","isRevealedOrDone"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/src/components/TextAnimations/DecryptedText/DecryptedText.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react'\nimport { motion } from 'framer-motion'\n\nconst styles = {\n  wrapper: {\n    display: 'inline-block',\n    whiteSpace: 'pre-wrap',\n  },\n  srOnly: {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    padding: 0,\n    margin: '-1px',\n    overflow: 'hidden',\n    clip: 'rect(0,0,0,0)',\n    border: 0,\n  },\n}\n\nexport default function DecryptedText({\n  text,\n  speed = 200,\n  maxIterations = 10,\n  sequential = false,\n  revealDirection = 'start',\n  useOriginalCharsOnly = true,\n  characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_+',\n  className = '',\n  parentClassName = '',\n  encryptedClassName = '',\n  animateOn = 'hover',\n  ...props\n}) {\n  const [displayText, setDisplayText] = useState(text);\n  const [isHovering, setIsHovering] = useState(false);\n  const [isScrambling, setIsScrambling] = useState(false);\n  const [revealedIndices, setRevealedIndices] = useState(new Set());\n  const [hasAnimated, setHasAnimated] = useState(false);\n  const containerRef = useRef(null);\n\n  useEffect(() => {\n    let interval\n    let currentIteration = 0\n\n    const getNextIndex = (revealedSet) => {\n      const textLength = text.length\n      switch (revealDirection) {\n        case 'start':\n          return revealedSet.size\n        case 'end':\n          return textLength - 1 - revealedSet.size\n        case 'center': {\n          const middle = Math.floor(textLength / 2)\n          const offset = Math.floor(revealedSet.size / 2)\n          const nextIndex =\n            revealedSet.size % 2 === 0\n              ? middle + offset\n              : middle - offset - 1\n\n          if (nextIndex >= 0 && nextIndex < textLength && !revealedSet.has(nextIndex)) {\n            return nextIndex\n          }\n\n          for (let i = 0; i < textLength; i++) {\n            if (!revealedSet.has(i)) return i\n          }\n          return 0\n        }\n        default:\n          return revealedSet.size\n      }\n    }\n\n    const availableChars = useOriginalCharsOnly\n      ? Array.from(new Set(text.split(''))).filter((char) => char !== ' ')\n      : characters.split('')\n\n    const shuffleText = (originalText, currentRevealed) => {\n      if (useOriginalCharsOnly) {\n        const positions = originalText.split('').map((char, i) => ({\n          char,\n          isSpace: char === ' ',\n          index: i,\n          isRevealed: currentRevealed.has(i),\n        }))\n\n        const nonSpaceChars = positions\n          .filter((p) => !p.isSpace && !p.isRevealed)\n          .map((p) => p.char)\n\n        for (let i = nonSpaceChars.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1))\n            ;[nonSpaceChars[i], nonSpaceChars[j]] = [nonSpaceChars[j], nonSpaceChars[i]]\n        }\n\n        let charIndex = 0\n        return positions\n          .map((p) => {\n            if (p.isSpace) return ' '\n            if (p.isRevealed) return originalText[p.index]\n            return nonSpaceChars[charIndex++]\n          })\n          .join('')\n      } else {\n        return originalText\n          .split('')\n          .map((char, i) => {\n            if (char === ' ') return ' '\n            if (currentRevealed.has(i)) return originalText[i]\n            return availableChars[Math.floor(Math.random() * availableChars.length)]\n          })\n          .join('')\n      }\n    }\n\n    if (isHovering) {\n      setIsScrambling(true)\n      interval = setInterval(() => {\n        setRevealedIndices((prevRevealed) => {\n          if (sequential) {\n            if (prevRevealed.size < text.length) {\n              const nextIndex = getNextIndex(prevRevealed)\n              const newRevealed = new Set(prevRevealed)\n              newRevealed.add(nextIndex)\n              setDisplayText(shuffleText(text, newRevealed))\n              return newRevealed\n            } else {\n              clearInterval(interval)\n              setIsScrambling(false)\n              return prevRevealed\n            }\n          } else {\n            setDisplayText(shuffleText(text, prevRevealed))\n            currentIteration++\n            if (currentIteration >= maxIterations) {\n              clearInterval(interval)\n              setIsScrambling(false)\n              setDisplayText(text)\n            }\n            return prevRevealed\n          }\n        })\n      }, speed)\n    } else {\n      setDisplayText(text)\n      setRevealedIndices(new Set())\n      setIsScrambling(false)\n    }\n\n    return () => {\n      if (interval) clearInterval(interval)\n    }\n  }, [\n    isHovering,\n    text,\n    speed,\n    maxIterations,\n    sequential,\n    revealDirection,\n    characters,\n    useOriginalCharsOnly,\n  ])\n\n  useEffect(() => {\n    if (animateOn !== 'view') return\n\n    const observerCallback = (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting && !hasAnimated) {\n          setIsHovering(true)\n          setHasAnimated(true)\n        }\n      })\n    }\n\n    const observerOptions = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.1,\n    }\n\n    const observer = new IntersectionObserver(observerCallback, observerOptions)\n    const currentRef = containerRef.current\n    if (currentRef) {\n      observer.observe(currentRef)\n    }\n\n    return () => {\n      if (currentRef) {\n        observer.unobserve(currentRef)\n      }\n    }\n  }, [animateOn, hasAnimated])\n\n  const hoverProps =\n    animateOn === 'hover'\n      ? {\n        onMouseEnter: () => setIsHovering(true),\n        onMouseLeave: () => setIsHovering(false),\n      }\n      : {}\n\n  return (\n    <motion.span className={parentClassName} ref={containerRef} style={styles.wrapper} {...hoverProps} {...props}>\n      <span style={styles.srOnly}>{displayText}</span>\n\n      <span aria-hidden=\"true\">\n        {displayText.split('').map((char, index) => {\n          const isRevealedOrDone =\n            revealedIndices.has(index) || !isScrambling || !isHovering\n\n          return (\n            <span\n              key={index}\n              className={isRevealedOrDone ? className : encryptedClassName}\n            >\n              {char}\n            </span>\n          )\n        })}\n      </span>\n    </motion.span>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}