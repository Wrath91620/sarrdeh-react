{"ast":null,"code":"import { Mesh } from '../../core/Mesh.js';\nimport { Program } from '../../core/Program.js';\nimport { Geometry } from '../../core/Geometry.js';\nimport { Vec3 } from '../../math/Vec3.js';\nexport class GridHelper extends Mesh {\n  constructor(gl, {\n    size = 10,\n    divisions = 10,\n    color = new Vec3(0.75, 0.75, 0.75),\n    ...meshProps\n  } = {}) {\n    const numVertices = (size + 1) * 2 * 2;\n    const vertices = new Float32Array(numVertices * 3);\n    const hs = size / 2;\n    for (let i = 0; i <= divisions; i++) {\n      const t = i / divisions;\n      const o = t * size - hs;\n      vertices.set([o, 0, -hs, o, 0, hs], i * 12);\n      vertices.set([-hs, 0, o, hs, 0, o], i * 12 + 6);\n    }\n    const geometry = new Geometry(gl, {\n      position: {\n        size: 3,\n        data: vertices\n      }\n    });\n    const program = new Program(gl, {\n      vertex,\n      fragment,\n      uniforms: {\n        color: {\n          value: color\n        }\n      }\n    });\n    super(gl, {\n      ...meshProps,\n      mode: gl.LINES,\n      geometry,\n      program\n    });\n  }\n}\nconst vertex = /* glsl */`\nattribute vec3 position;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main() {    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\nconst fragment = /* glsl */`\nprecision highp float;\nuniform vec3 color;\n\nvoid main() {    \n    gl_FragColor = vec4(color, 1.0);\n}\n`;","map":{"version":3,"names":["Mesh","Program","Geometry","Vec3","GridHelper","constructor","gl","size","divisions","color","meshProps","numVertices","vertices","Float32Array","hs","i","t","o","set","geometry","position","data","program","vertex","fragment","uniforms","value","mode","LINES"],"sources":["C:/Users/Sarrdeh Tech/Desktop/Sarrdeh-React/sarrdeh-react/node_modules/ogl/src/extras/helpers/GridHelper.js"],"sourcesContent":["import { Mesh } from '../../core/Mesh.js';\r\nimport { Program } from '../../core/Program.js';\r\nimport { Geometry } from '../../core/Geometry.js';\r\nimport { Vec3 } from '../../math/Vec3.js';\r\n\r\nexport class GridHelper extends Mesh {\r\n    constructor(gl, { size = 10, divisions = 10, color = new Vec3(0.75, 0.75, 0.75), ...meshProps } = {}) {\r\n        const numVertices = (size + 1) * 2 * 2;\r\n        const vertices = new Float32Array(numVertices * 3);\r\n\r\n        const hs = size / 2;\r\n        for (let i = 0; i <= divisions; i++) {\r\n            const t = i / divisions;\r\n            const o = t * size - hs;\r\n\r\n            vertices.set([o, 0, -hs, o, 0, hs], i * 12);\r\n            vertices.set([-hs, 0, o, hs, 0, o], i * 12 + 6);\r\n        }\r\n\r\n        const geometry = new Geometry(gl, {\r\n            position: { size: 3, data: vertices },\r\n        });\r\n\r\n        const program = new Program(gl, {\r\n            vertex,\r\n            fragment,\r\n            uniforms: {\r\n                color: { value: color },\r\n            },\r\n        });\r\n        super(gl, { ...meshProps, mode: gl.LINES, geometry, program });\r\n    }\r\n}\r\n\r\nconst vertex = /* glsl */ `\r\nattribute vec3 position;\r\nuniform mat4 modelViewMatrix;\r\nuniform mat4 projectionMatrix;\r\n\r\nvoid main() {    \r\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n}\r\n`;\r\n\r\nconst fragment = /* glsl */ `\r\nprecision highp float;\r\nuniform vec3 color;\r\n\r\nvoid main() {    \r\n    gl_FragColor = vec4(color, 1.0);\r\n}\r\n`;\r\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,oBAAoB;AACzC,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,OAAO,MAAMC,UAAU,SAASJ,IAAI,CAAC;EACjCK,WAAWA,CAACC,EAAE,EAAE;IAAEC,IAAI,GAAG,EAAE;IAAEC,SAAS,GAAG,EAAE;IAAEC,KAAK,GAAG,IAAIN,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAAE,GAAGO;EAAU,CAAC,GAAG,CAAC,CAAC,EAAE;IAClG,MAAMC,WAAW,GAAG,CAACJ,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IACtC,MAAMK,QAAQ,GAAG,IAAIC,YAAY,CAACF,WAAW,GAAG,CAAC,CAAC;IAElD,MAAMG,EAAE,GAAGP,IAAI,GAAG,CAAC;IACnB,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,SAAS,EAAEO,CAAC,EAAE,EAAE;MACjC,MAAMC,CAAC,GAAGD,CAAC,GAAGP,SAAS;MACvB,MAAMS,CAAC,GAAGD,CAAC,GAAGT,IAAI,GAAGO,EAAE;MAEvBF,QAAQ,CAACM,GAAG,CAAC,CAACD,CAAC,EAAE,CAAC,EAAE,CAACH,EAAE,EAAEG,CAAC,EAAE,CAAC,EAAEH,EAAE,CAAC,EAAEC,CAAC,GAAG,EAAE,CAAC;MAC3CH,QAAQ,CAACM,GAAG,CAAC,CAAC,CAACJ,EAAE,EAAE,CAAC,EAAEG,CAAC,EAAEH,EAAE,EAAE,CAAC,EAAEG,CAAC,CAAC,EAAEF,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACnD;IAEA,MAAMI,QAAQ,GAAG,IAAIjB,QAAQ,CAACI,EAAE,EAAE;MAC9Bc,QAAQ,EAAE;QAAEb,IAAI,EAAE,CAAC;QAAEc,IAAI,EAAET;MAAS;IACxC,CAAC,CAAC;IAEF,MAAMU,OAAO,GAAG,IAAIrB,OAAO,CAACK,EAAE,EAAE;MAC5BiB,MAAM;MACNC,QAAQ;MACRC,QAAQ,EAAE;QACNhB,KAAK,EAAE;UAAEiB,KAAK,EAAEjB;QAAM;MAC1B;IACJ,CAAC,CAAC;IACF,KAAK,CAACH,EAAE,EAAE;MAAE,GAAGI,SAAS;MAAEiB,IAAI,EAAErB,EAAE,CAACsB,KAAK;MAAET,QAAQ;MAAEG;IAAQ,CAAC,CAAC;EAClE;AACJ;AAEA,MAAMC,MAAM,GAAG,UAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,QAAQ,GAAG,UAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}